{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://bike_game/./src/abilities.ts","webpack://bike_game/./src/collisions.ts","webpack://bike_game/./src/hud.ts","webpack://bike_game/./public/gameObject.ts","webpack://bike_game/./src/index.ts","webpack://bike_game/./src/platforms.ts","webpack://bike_game/./src/player.ts","webpack://bike_game/webpack/bootstrap","webpack://bike_game/webpack/runtime/define property getters","webpack://bike_game/webpack/runtime/hasOwnProperty shorthand","webpack://bike_game/webpack/startup"],"sourcesContent":["import Collisions from './collisions';\r\nimport Hud from './hud';\r\nimport Player from './player';\r\nimport { Context, IPowerUp } from './types';\r\n\r\nexport default class Abilities {\r\n\tprivate ctx: Context;\r\n\tprivate world: HTMLCanvasElement;\r\n\tprivate hud: Hud;\r\n\tprivate collisions: Collisions;\r\n\tprivate player: Player;\r\n\tprivate imagePaths: string[];\r\n\tprivate images: any;\r\n\tprivate collectedPowerUps: string[];\r\n\tpublic currentPowerUp: {\r\n\t\tname: string;\r\n\t\tdurationInSecs: number;\r\n\t};\r\n\r\n\tconstructor(ctx: Context, world: HTMLCanvasElement, hud: Hud, collisions: Collisions, player: Player) {\r\n\t\tthis.ctx = ctx;\r\n\t\tthis.world = world;\r\n\t\tthis.hud = hud;\r\n\t\tthis.collisions = collisions;\r\n\t\tthis.player = player;\r\n\t\tthis.imagePaths = ['../public/healthBoost.png', '../public/invincibility.png'];\r\n\t\tthis.images = {};\r\n\t\tthis.collectedPowerUps = [];\r\n\t\tthis.currentPowerUp = {\r\n\t\t\tname: '',\r\n\t\t\tdurationInSecs: 0,\r\n\t\t};\r\n\t}\r\n\r\n\tpublic async setUp() {\r\n\t\tconst preloadImages = () => {\r\n\t\t\tconst promises = this.imagePaths.map((path: string) => {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tconst name = path.split('/').pop()?.split('.')[0];\r\n\t\t\t\t\tconst image = new Image();\r\n\r\n\t\t\t\t\timage.src = path;\r\n\t\t\t\t\timage.onload = () => {\r\n\t\t\t\t\t\tresolve([name, image]);\r\n\t\t\t\t\t};\r\n\t\t\t\t\timage.onerror = () => reject(`Image failed to load: ${path}`);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn Promise.all(promises);\r\n\t\t};\r\n\r\n\t\tconst imgArraytemp: any[] = await preloadImages();\r\n\t\tthis.images = Object.fromEntries(imgArraytemp);\r\n\t}\r\n\r\n\tpublic finishPowerUp() {\r\n\t\tswitch (this.currentPowerUp.name) {\r\n\t\t\tcase 'invincibility':\r\n\t\t\t\tthis.collisions.ignoreObjectCollision = false;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.currentPowerUp = {\r\n\t\t\tname: '',\r\n\t\t\tdurationInSecs: 0,\r\n\t\t};\r\n\t\tthis.hud.currentPowerUp = this.currentPowerUp;\r\n\t\tthis.hud.powerUpPercentUsed = 0;\r\n\t\tthis.hud.usingPowerUp = false;\r\n\t}\r\n\r\n\tpublic usePowerUp() {\r\n\t\tswitch (this.currentPowerUp.name) {\r\n\t\t\tcase 'invincibility':\r\n\t\t\t\tthis.collisions.ignoreObjectCollision = true;\r\n\t\t\t\tthis.hud.usingPowerUp = true;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate grabPowerUp(powerUp: string) {\r\n\t\tswitch (powerUp) {\r\n\t\t\tcase 'healthBoost':\r\n\t\t\t\tthis.hud.increaseHealth(15);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'invincibility':\r\n\t\t\t\tif (this.currentPowerUp.name) return;\r\n\t\t\t\tthis.currentPowerUp = {\r\n\t\t\t\t\tname: powerUp,\r\n\t\t\t\t\tdurationInSecs: 5,\r\n\t\t\t\t};\r\n\t\t\t\tthis.hud.currentPowerUp = this.currentPowerUp;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic draw(powerUps: IPowerUp[], platYTop: number, platX: number, platLen: number, platIndex: number) {\r\n\t\tfor (let i = 0; i < powerUps?.length; i++) {\r\n\t\t\tconst imgSrc: HTMLImageElement = this.images[powerUps[i].name];\r\n\r\n\t\t\tif (!imgSrc) continue;\r\n\r\n\t\t\tconst imgX = platX + platLen * powerUps[i].xPercAlongPlat;\r\n\t\t\tconst imgY = platYTop - imgSrc.height + 10 - powerUps[i].distAbovePlat;\r\n\t\t\tconst object = `${powerUps[i].name}_${platIndex}_${powerUps[i].xPercAlongPlat}`;\r\n\r\n\t\t\tif (this.collectedPowerUps.includes(object)) {\r\n\t\t\t\tif (imgX + imgSrc.width < 0) this.collectedPowerUps.shift();\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tthis.ctx.drawImage(imgSrc, imgX, imgY, imgSrc.width, imgSrc.height);\r\n\r\n\t\t\tconst collidedWithPowerUp = this.collisions.powerUpCollision({\r\n\t\t\t\tx1: this.player.x,\r\n\t\t\t\ty1: this.player.y,\r\n\t\t\t\tx2: imgX,\r\n\t\t\t\ty2: imgY,\r\n\t\t\t\tw1: this.player.w,\r\n\t\t\t\th1: this.player.h,\r\n\t\t\t\tw2: this.images[powerUps[i].name].width,\r\n\t\t\t\th2:\r\n\t\t\t\t\tthis.images[powerUps[i].name].height ||\r\n\t\t\t\t\tthis.world.height - (platYTop - this.images[powerUps[i].name].height + 10),\r\n\t\t\t\tmargin: 0,\r\n\t\t\t\tobject: object,\r\n\t\t\t});\r\n\r\n\t\t\tif (collidedWithPowerUp) {\r\n\t\t\t\tthis.collectedPowerUps.push(object);\r\n\t\t\t\tthis.grabPowerUp(powerUps[i].name);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import Hud from './hud';\r\nimport Player from './player';\r\nimport { Context, ICollisionArgs } from './types';\r\n\r\nexport default class Collisions {\r\n\tprivate ctx: Context;\r\n\tprivate world: HTMLCanvasElement;\r\n\tprivate player: Player;\r\n\tprivate hud: Hud;\r\n\tpublic ignoreObjectCollision: boolean;\r\n\r\n\tconstructor(ctx: Context, world: HTMLCanvasElement, player: Player, hud: Hud) {\r\n\t\tthis.ctx = ctx;\r\n\t\tthis.world = world;\r\n\t\tthis.player = player;\r\n\t\tthis.hud = hud;\r\n\t\tthis.ignoreObjectCollision = false;\r\n\t}\r\n\r\n\tpublic checkForPlatCollision({ x1, y1, x2, y2, w1, h1, w2, h2, margin, object }: ICollisionArgs): boolean {\r\n\t\tconst playerRightOfPlatLeft = x1 + w1 >= x2 + margin; // Player right side to right of plat left\r\n\t\tconst playerLeftOfPlatRight = x1 <= x2 + w2; // Player left side to left of plat right\r\n\t\tconst playerAbovePlatBot = y1 <= y2 + h2; //Player top above plat bottom\r\n\t\tconst playerBelowPlatTop = y1 + this.player.h > y2 + (this.player.isInAir ? margin : 0); // Player bottom above plat top\r\n\r\n\t\tif (playerRightOfPlatLeft && playerLeftOfPlatRight && playerAbovePlatBot) {\r\n\t\t\t// Land if negative velocity and within 20px of platform\r\n\t\t\tif (this.player.yVelocity <= 0 && Math.abs(y2 - (y1 + h1)) < 16) {\r\n\t\t\t\tthis.player.land(y2);\r\n\t\t\t\treturn true;\r\n\t\t\t} else if (playerBelowPlatTop) {\r\n\t\t\t\tconsole.log('Platform Collision!');\r\n\t\t\t\tthis.hud.health = 0;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.player.y + this.player.h > this.world.height) {\r\n\t\t\tthis.hud.health = 0;\r\n\t\t\tconsole.log('Out Of Bounds Collision!');\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic checkForCollision({ x1, y1, x2, y2, w1, h1, w2, h2, margin, object }: ICollisionArgs) {\r\n\t\tif (this.ignoreObjectCollision) return;\r\n\t\tif (\r\n\t\t\tx1 + w1 >= x2 + margin && // Check player right collision\r\n\t\t\tx1 <= x2 + w2 && // Check player left collision\r\n\t\t\ty1 <= y2 + h2 && // Check player top collision\r\n\t\t\ty1 + h1 > y2 // Check player bottom collision\r\n\t\t) {\r\n\t\t\tthis.hud.reduceHealth(object, 40);\r\n\t\t\tthis.player.changeToDamagedImgs(object);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic powerUpCollision({ x1, y1, x2, y2, w1, h1, w2, h2, margin, object }: ICollisionArgs): boolean {\r\n\t\tif (\r\n\t\t\tx1 + w1 >= x2 + margin && // Check player right collision\r\n\t\t\tx1 <= x2 + w2 && // Check player left collision\r\n\t\t\ty1 <= y2 + h2 && // Check player top collision\r\n\t\t\ty1 + h1 > y2 // Check player bottom collision\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n","import { Context } from './types';\r\n\r\nexport default class Hud {\r\n\tprivate ctx: Context;\r\n\tprivate world: HTMLCanvasElement;\r\n\tpublic health: number;\r\n\tprivate lastObjectHit: any;\r\n\tpublic drawingLevelText: boolean;\r\n\tprivate levelTextOpacity: number;\r\n\tprivate levelTextOpacityInc: number;\r\n\tpublic currentLevel: number;\r\n\tpublic fps: number;\r\n\tpublic framerate: number;\r\n\tpublic fpsEnabled: boolean;\r\n\tprivate imagePaths: string[];\r\n\tprivate images: any;\r\n\tpublic currentPowerUp: {\r\n\t\tname: string;\r\n\t\tdurationInSecs: number;\r\n\t};\r\n\tpublic usingPowerUp: boolean;\r\n\tpublic powerUpPercentUsed: number;\r\n\r\n\tconstructor(ctx: Context, world: HTMLCanvasElement, framerate: number) {\r\n\t\tthis.ctx = ctx;\r\n\t\tthis.world = world;\r\n\t\tthis.health = 100;\r\n\t\tthis.lastObjectHit = '';\r\n\t\tthis.drawingLevelText = false;\r\n\t\tthis.levelTextOpacity = 0;\r\n\t\tthis.levelTextOpacityInc = 0.02;\r\n\t\tthis.currentLevel = 0;\r\n\t\tthis.fps = 0;\r\n\t\tthis.framerate = framerate;\r\n\t\tthis.fpsEnabled = false;\r\n\t\tthis.imagePaths = ['../public/invincibility.png'];\r\n\t\tthis.images = {};\r\n\t\tthis.currentPowerUp = {\r\n\t\t\tname: '',\r\n\t\t\tdurationInSecs: 0,\r\n\t\t};\r\n\t\tthis.powerUpPercentUsed = 0;\r\n\t\tthis.usingPowerUp = false;\r\n\t}\r\n\r\n\tpublic async setUp() {\r\n\t\tconst preloadImages = () => {\r\n\t\t\tconst promises = this.imagePaths.map((path: string) => {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tconst name = path.split('/').pop()?.split('.')[0];\r\n\t\t\t\t\tconst image = new Image();\r\n\r\n\t\t\t\t\timage.src = path;\r\n\t\t\t\t\timage.onload = () => {\r\n\t\t\t\t\t\tresolve([name, image]);\r\n\t\t\t\t\t};\r\n\t\t\t\t\timage.onerror = () => reject(`Image failed to load: ${path}`);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn Promise.all(promises);\r\n\t\t};\r\n\r\n\t\tconst imgArraytemp: any[] = await preloadImages();\r\n\t\tthis.images = Object.fromEntries(imgArraytemp);\r\n\t}\r\n\r\n\tprivate drawPowerUp() {\r\n\t\tif (!this.currentPowerUp.name) return;\r\n\r\n\t\tconst w = this.images[this.currentPowerUp.name].width;\r\n\t\tconst h = this.images[this.currentPowerUp.name].height;\r\n\t\tconst circleSeparation = 6;\r\n\t\tconst rInner = Math.max(w, h) / 2 + 10;\r\n\t\tconst rOuter = rInner + circleSeparation;\r\n\t\tconst xOffset = -20;\r\n\t\tconst yOffset = 20;\r\n\r\n\t\t// Inner circle\r\n\t\tthis.ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.ellipse(\r\n\t\t\tthis.world.width - rInner + xOffset,\r\n\t\t\trInner + yOffset,\r\n\t\t\trInner,\r\n\t\t\trInner,\r\n\t\t\t2 * Math.PI,\r\n\t\t\t0,\r\n\t\t\t2 * Math.PI\r\n\t\t);\r\n\t\tthis.ctx.fill();\r\n\r\n\t\t// Middle circle Static\r\n\t\tthis.ctx.strokeStyle = 'rgba(40, 40, 40, 1)';\r\n\t\tthis.ctx.lineWidth = circleSeparation + 2;\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.ellipse(\r\n\t\t\tthis.world.width - rOuter + xOffset + circleSeparation,\r\n\t\t\trOuter + yOffset - circleSeparation,\r\n\t\t\trOuter - circleSeparation / 2 + 1,\r\n\t\t\trOuter - circleSeparation / 2 + 1,\r\n\t\t\t2 * Math.PI,\r\n\t\t\t-Math.PI / 2,\r\n\t\t\t(3 * Math.PI) / 2\r\n\t\t);\r\n\t\tthis.ctx.stroke();\r\n\r\n\t\t// Middle circle Dynamic\r\n\t\tthis.ctx.strokeStyle = 'rgba(7, 191, 4, 1)';\r\n\t\tthis.ctx.lineWidth = circleSeparation;\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.ellipse(\r\n\t\t\tthis.world.width - rOuter + xOffset + circleSeparation,\r\n\t\t\trOuter + yOffset - circleSeparation,\r\n\t\t\trOuter - circleSeparation / 2,\r\n\t\t\trOuter - circleSeparation / 2,\r\n\t\t\t2 * Math.PI,\r\n\t\t\t-Math.PI / 2 + 2 * Math.PI * this.powerUpPercentUsed,\r\n\t\t\t(3 * Math.PI) / 2\r\n\t\t);\r\n\t\tthis.ctx.stroke();\r\n\r\n\t\tthis.ctx.drawImage(\r\n\t\t\tthis.images[this.currentPowerUp.name],\r\n\t\t\tthis.world.width - rInner - w / 2 + xOffset,\r\n\t\t\tyOffset + rInner - h / 2,\r\n\t\t\tw,\r\n\t\t\th\r\n\t\t);\r\n\r\n\t\tif (this.usingPowerUp) {\r\n\t\t\tthis.powerUpPercentUsed += 1 / (this.framerate * this.currentPowerUp.durationInSecs);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate drawFps() {\r\n\t\tif (!this.fpsEnabled) return;\r\n\r\n\t\tthis.ctx.font = '20px Arial';\r\n\t\tthis.ctx.fillStyle = 'rgba(0, 255, 0, 1)';\r\n\t\tthis.ctx.textAlign = 'right';\r\n\t\tthis.ctx.fillText(`${this.fps} FPS`, this.world.width - 20, 30);\r\n\t}\r\n\r\n\tpublic drawJumpCharge(percentCharged: number, x: number, y: number) {\r\n\t\tconst w = 8;\r\n\t\tconst h = 60;\r\n\t\tconst xOffset = 0;\r\n\t\tconst yOffset = -20;\r\n\t\tthis.ctx.strokeStyle = 'rgb(40, 40, 40)';\r\n\t\tthis.ctx.lineWidth = 2;\r\n\t\tthis.ctx.fillStyle = 'rgb(7, 191, 4)';\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.roundRect(x + xOffset - 1, y + yOffset - 1, w + 2, h + 2, 8);\r\n\t\tthis.ctx.stroke();\r\n\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.roundRect(x + xOffset, y + yOffset + h, w, -h * percentCharged, 8);\r\n\t\tthis.ctx.fill();\r\n\t}\r\n\r\n\tpublic reduceHealth(object: string, amt: number) {\r\n\t\tif (this.lastObjectHit === object) return;\r\n\t\tif (this.health - amt <= 0) this.health = 0;\r\n\t\telse this.health -= amt;\r\n\r\n\t\tthis.lastObjectHit = object;\r\n\t}\r\n\r\n\tpublic increaseHealth(amt: number) {\r\n\t\tif (this.health + amt >= 100) this.health = 100;\r\n\t\telse this.health += amt;\r\n\t}\r\n\r\n\tprivate drawHealth() {\r\n\t\tconst sectionStartX = 30;\r\n\t\tconst sectionStartY = 11;\r\n\t\tconst sectionW = 160;\r\n\t\tconst sectionH = 12;\r\n\r\n\t\tthis.ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.roundRect(sectionStartX - 2, sectionStartY - 2, sectionW + 4, sectionH + 4, 10);\r\n\t\tthis.ctx.fill();\r\n\r\n\t\tthis.ctx.fillStyle =\r\n\t\t\tthis.health >= 90\r\n\t\t\t\t? 'rgba(7, 191, 4, 1)'\r\n\t\t\t\t: this.health >= 50 && this.health < 90\r\n\t\t\t\t? 'rgba(200, 200, 0, 1)'\r\n\t\t\t\t: 'rgba(230, 0, 0, 1)';\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.roundRect(sectionStartX, sectionStartY, sectionW * (this.health / 100), sectionH, 10);\r\n\t\tthis.ctx.fill();\r\n\t}\r\n\r\n\tprivate drawNextLevelText() {\r\n\t\tconst w = 250;\r\n\t\tconst h = 70;\r\n\t\tconst yOffset = -200;\r\n\r\n\t\tthis.ctx.fillStyle = `rgba(0, 0, 0, ${this.levelTextOpacity >= 0.7 ? 0.7 : this.levelTextOpacity})`;\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.roundRect(this.world.width / 2 - w / 2, this.world.height / 2 - h / 2 + yOffset, w, h, 10);\r\n\t\tthis.ctx.fill();\r\n\r\n\t\tthis.ctx.font = '40px Arial';\r\n\t\tthis.ctx.fillStyle = `rgba(255, 255, 255, ${this.levelTextOpacity})`;\r\n\t\tthis.ctx.textAlign = 'center';\r\n\t\tthis.ctx.textBaseline = 'middle';\r\n\t\tthis.ctx.fillText(\r\n\t\t\t`Level ${this.currentLevel + 1}`,\r\n\t\t\tthis.world.width / 2,\r\n\t\t\tthis.world.height / 2 + yOffset\r\n\t\t);\r\n\r\n\t\tthis.levelTextOpacity += this.levelTextOpacityInc;\r\n\t}\r\n\r\n\tpublic beginLevelTextAnimation() {\r\n\t\tthis.drawingLevelText = true;\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.levelTextOpacityInc *= -1;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.drawingLevelText = false;\r\n\t\t\t\tthis.levelTextOpacityInc *= -1;\r\n\t\t\t}, 1500);\r\n\t\t}, 1500);\r\n\t}\r\n\r\n\tpublic draw() {\r\n\t\tthis.drawHealth();\r\n\t\tthis.drawFps();\r\n\t\tthis.drawPowerUp();\r\n\r\n\t\tif (this.drawingLevelText) this.drawNextLevelText();\r\n\t}\r\n}\r\n","import { IGameObject, ILevel } from '../src/types';\r\n\r\nconst levelOne: ILevel = {\r\n\tplatforms: [\r\n\t\t{\r\n\t\t\ty: 600,\r\n\t\t\tlen: 3000,\r\n\t\t\tgapToNext: 0,\r\n\t\t\tdecor: [{ name: 'startSign', xLocsOnPlatByPerc: [0.6] }],\r\n\t\t},\r\n\t\t{\r\n\t\t\ty: 600,\r\n\t\t\tlen: 2000,\r\n\t\t\tgapToNext: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\ty: 700,\r\n\t\t\tlen: 1000,\r\n\t\t\tgapToNext: 0,\r\n\t\t},\r\n\t\t{ y: 600, len: 800, gapToNext: 0 },\r\n\t\t{ y: 500, len: 2000, gapToNext: 0, obsticles: [{ name: 'rock2', xLocsOnPlatByPerc: [0.4] }] },\r\n\t\t{ y: 700, len: 1200, gapToNext: 0 },\r\n\t\t{ y: 450, len: 1000, gapToNext: 0, obsticles: [{ name: 'rock3', xLocsOnPlatByPerc: [0.8] }] },\r\n\t\t{ y: 650, len: 1000, gapToNext: 0 },\r\n\t\t{ y: 625, len: 600, gapToNext: 0 },\r\n\t\t{\r\n\t\t\ty: 600,\r\n\t\t\tlen: 800,\r\n\t\t\tgapToNext: 0,\r\n\t\t\tpowerUps: [{ name: 'invincibility', xPercAlongPlat: 0.8, distAbovePlat: 300 }],\r\n\t\t},\r\n\t\t{ y: 550, len: 1000, gapToNext: 0, obsticles: [{ name: 'rock3', xLocsOnPlatByPerc: [0.1] }] },\r\n\t\t{ y: 410, len: 1000, gapToNext: 0 },\r\n\t\t{ y: 700, len: 1000, gapToNext: 0, obsticles: [{ name: 'rock1', xLocsOnPlatByPerc: [0.6] }] },\r\n\t\t{ y: 600, len: 800, gapToNext: 0 },\r\n\t\t{ y: 700, len: 1200, gapToNext: 0 },\r\n\t\t{ y: 450, len: 1000, gapToNext: 0, obsticles: [{ name: 'rock1', xLocsOnPlatByPerc: [0.8] }] },\r\n\t\t{\r\n\t\t\ty: 600,\r\n\t\t\tlen: 2000,\r\n\t\t\tgapToNext: 0,\r\n\t\t\tpowerUps: [{ name: 'healthBoost', xPercAlongPlat: 0.1, distAbovePlat: 300 }],\r\n\t\t},\r\n\t],\r\n\tplatformTexture: 'dirtPlat',\r\n\tplatformH: null,\r\n\tbackgroundImg: 'bgLevel1',\r\n\tbgImgYOffset: 0,\r\n\tmaxPlatLen: 4000,\r\n\tspeed: 14,\r\n};\r\n\r\nconst levelTwo: ILevel = {\r\n\tplatforms: [\r\n\t\t{\r\n\t\t\ty: 600,\r\n\t\t\tlen: 3000,\r\n\t\t\tgapToNext: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\ty: 600,\r\n\t\t\tlen: 2000,\r\n\t\t\tgapToNext: 200,\r\n\t\t},\r\n\t\t{ y: 700, len: 1000, gapToNext: 0, obsticles: [{ name: 'rock1', xLocsOnPlatByPerc: [0.1] }] },\r\n\t\t{\r\n\t\t\ty: 600,\r\n\t\t\tlen: 800,\r\n\t\t\tgapToNext: 0,\r\n\t\t\tpowerUps: [{ name: 'invincibility', xPercAlongPlat: 0.3, distAbovePlat: 200 }],\r\n\t\t},\r\n\t\t{\r\n\t\t\ty: 500,\r\n\t\t\tlen: 2000,\r\n\t\t\tgapToNext: 0,\r\n\t\t\tobsticles: [{ name: 'rock2', xLocsOnPlatByPerc: [0.4] }],\r\n\t\t},\r\n\t\t{ y: 700, len: 1200, gapToNext: 0 },\r\n\t\t{ y: 450, len: 1000, gapToNext: 0, obsticles: [{ name: 'rock3', xLocsOnPlatByPerc: [0.8] }] },\r\n\t\t{ y: 650, len: 1000, gapToNext: 0 },\r\n\t\t{ y: 625, len: 600, gapToNext: 0 },\r\n\t\t{\r\n\t\t\ty: 600,\r\n\t\t\tlen: 800,\r\n\t\t\tgapToNext: 50,\r\n\t\t\tpowerUps: [{ name: 'healthBoost', xPercAlongPlat: 0.2, distAbovePlat: 300 }],\r\n\t\t},\r\n\t\t{\r\n\t\t\ty: 700,\r\n\t\t\tlen: 2000,\r\n\t\t\tgapToNext: 0,\r\n\t\t},\r\n\t\t{ y: 550, len: 700, gapToNext: 0, obsticles: [{ name: 'rock3', xLocsOnPlatByPerc: [0.1] }] },\r\n\t\t{ y: 410, len: 1000, gapToNext: 300 },\r\n\t\t{ y: 700, len: 1000, gapToNext: 0, obsticles: [{ name: 'rock1', xLocsOnPlatByPerc: [0.6] }] },\r\n\t\t{ y: 600, len: 800, gapToNext: 0 },\r\n\t\t{ y: 550, len: 1500, gapToNext: 0, obsticles: [{ name: 'rock3', xLocsOnPlatByPerc: [0.4] }] },\r\n\t\t{ y: 700, len: 1200, gapToNext: 100 },\r\n\t\t{ y: 450, len: 1000, gapToNext: 0, obsticles: [{ name: 'rock1', xLocsOnPlatByPerc: [0.8] }] },\r\n\t\t{ y: 650, len: 1000, gapToNext: 0 },\r\n\t\t{ y: 625, len: 600, gapToNext: 0 },\r\n\t],\r\n\tplatformTexture: 'woodPlat',\r\n\tplatformH: 16,\r\n\tbackgroundImg: 'bgLevel2',\r\n\tbgImgYOffset: 0,\r\n\tmaxPlatLen: 4000,\r\n\tspeed: 16,\r\n};\r\n\r\nconst gameObject: IGameObject = {\r\n\tlevels: [levelOne, levelTwo],\r\n};\r\n\r\nexport default gameObject;\r\n","import gameObject from '../public/gameObject';\r\nimport Abilities from './abilities';\r\nimport Collisions from './collisions';\r\nimport Hud from './hud';\r\nimport Platforms from './platforms';\r\nimport Player from './player';\r\n\r\nconst world = <HTMLCanvasElement>document.getElementById('world');\r\nconst ctx = <CanvasRenderingContext2D>world.getContext('2d', { alpha: false });\r\n\r\nconst startBtn = <HTMLDivElement>document.querySelector('.startBtn');\r\n\r\n// For game loop\r\nlet requestId: number | null, now: number, then: number, elapsed: number, fpsInterval: number;\r\n\r\nlet frameRate = 60;\r\nlet frames = 0;\r\nlet paused = false;\r\nlet levelsStarted = -1;\r\n\r\n// Classes\r\nlet platforms: Platforms, player: Player, hud: Hud, collisions: Collisions, abilities: Abilities;\r\n\r\nconst endGame = () => {\r\n\tif (requestId) cancelAnimationFrame(requestId);\r\n\trequestId = null;\r\n\tprepGame();\r\n\tstartBtn.style.display = 'block';\r\n\tstartBtn.innerHTML = 'Play Again';\r\n\tlevelsStarted = -1;\r\n};\r\n\r\nconst gameLoop = () => {\r\n\trequestId = requestAnimationFrame(gameLoop);\r\n\r\n\tfpsInterval = 1000 / frameRate;\r\n\tnow = Date.now();\r\n\telapsed = now - (then || 0);\r\n\r\n\tif (elapsed > fpsInterval) {\r\n\t\tif (frames === 0)\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\thud.fps = frames;\r\n\t\t\t\t// console.log(frames);\r\n\t\t\t\tframes = 0;\r\n\t\t\t}, 1000);\r\n\t\tframes += 1;\r\n\t\tthen = now - (elapsed % fpsInterval);\r\n\r\n\t\tctx.clearRect(0, 0, world.width, world.height);\r\n\t\tif (!paused) {\r\n\t\t\tplatforms.move();\r\n\t\t\tplayer.speed = gameObject.levels[platforms.currentLevel].speed;\r\n\t\t} else {\r\n\t\t\tplayer.speed = 0;\r\n\t\t}\r\n\t\tplatforms.draw();\r\n\t\tplayer.draw();\r\n\t\thud.draw();\r\n\r\n\t\tif (hud.currentPowerUp.name && hud.powerUpPercentUsed >= 1) abilities.finishPowerUp();\r\n\r\n\t\t// if (platforms.platsVisible?.[0]?.index === 0 && platforms.currentLevel > levelsStarted) {\r\n\t\t// \tlevelsStarted = platforms.currentLevel;\r\n\t\t// }\r\n\r\n\t\tif (hud.health === 0 || platforms.gameCompleted) endGame();\r\n\t}\r\n};\r\n\r\nconst startGame = () => {\r\n\tgameLoop();\r\n};\r\n\r\nconst prepGame = async () => {\r\n\tObject.freeze(gameObject);\r\n\r\n\thud = new Hud(ctx, world, frameRate);\r\n\tplayer = new Player(ctx, world, hud);\r\n\tcollisions = new Collisions(ctx, world, player, hud);\r\n\tabilities = new Abilities(ctx, world, hud, collisions, player);\r\n\tplatforms = new Platforms(ctx, world, player, hud, collisions, abilities, gameObject);\r\n\r\n\tawait platforms.setUp();\r\n\tawait player.setUp();\r\n\tawait abilities.setUp();\r\n\tawait hud.setUp();\r\n\r\n\t// startGame();\r\n\tstartBtn.style.display = 'block';\r\n\t// startBtn.style.display = 'none';\r\n};\r\n\r\nprepGame();\r\n\r\ndocument.addEventListener('keydown', e => {\r\n\tswitch (e.code) {\r\n\t\tcase 'ArrowDown':\r\n\t\t\tif (requestId) {\r\n\t\t\t\tif (paused) {\r\n\t\t\t\t\tpaused = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!player.loadingJump) player.loadingJump = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t}\r\n});\r\n\r\ndocument.addEventListener('keyup', e => {\r\n\tswitch (e.code) {\r\n\t\tcase 'Escape':\r\n\t\t\tif (paused) {\r\n\t\t\t\tpaused = false;\r\n\t\t\t} else {\r\n\t\t\t\tpaused = true;\r\n\t\t\t}\r\n\t\tcase 'ArrowDown':\r\n\t\t\tplayer.jump();\r\n\t\t\tbreak;\r\n\t\tcase 'ArrowUp':\r\n\t\t\tabilities.usePowerUp();\r\n\t\t\tbreak;\r\n\t}\r\n});\r\n\r\nstartBtn.onclick = () => {\r\n\tstartGame();\r\n\tstartBtn.style.display = 'none';\r\n};\r\n","import Abilities from './abilities';\r\nimport Collisions from './collisions';\r\nimport Hud from './hud';\r\nimport Player from './player';\r\nimport { Context, IGameObject, ILevel, IPlatObject, IPlatform, IPowerUp, IVisiblePlat } from './types';\r\n\r\nexport default class Platforms {\r\n\tprivate ctx: Context;\r\n\tprivate world: HTMLCanvasElement;\r\n\tprivate player: Player;\r\n\tprivate hud: Hud;\r\n\tprivate collisions: Collisions;\r\n\tprivate abilities: Abilities;\r\n\tprivate gameObject: IGameObject;\r\n\tpublic currentLevel: number;\r\n\tpublic platsVisible: IVisiblePlat[];\r\n\tprivate backgroundX: number;\r\n\tprivate backgroundX2: number;\r\n\tprivate bgImgYOffset: number;\r\n\tprivate bgImgYOffset2: number;\r\n\tpublic gameOver: boolean;\r\n\tprivate collisionMargin: number;\r\n\tprivate imagePaths: string[];\r\n\tprivate images: any;\r\n\tprivate bgImg1: string;\r\n\tprivate bgImg2: string;\r\n\tpublic gameCompleted: boolean;\r\n\r\n\tconstructor(\r\n\t\tctx: Context,\r\n\t\tworld: HTMLCanvasElement,\r\n\t\tplayer: Player,\r\n\t\thud: Hud,\r\n\t\tcollisions: Collisions,\r\n\t\tabilities: Abilities,\r\n\t\tgameObject: any\r\n\t) {\r\n\t\tthis.ctx = ctx;\r\n\t\tthis.world = world;\r\n\t\tthis.player = player;\r\n\t\tthis.hud = hud;\r\n\t\tthis.collisions = collisions;\r\n\t\tthis.abilities = abilities;\r\n\t\tthis.gameObject = gameObject;\r\n\t\tthis.currentLevel = 0;\r\n\t\tthis.platsVisible = [\r\n\t\t\t{\r\n\t\t\t\tindex: 0,\r\n\t\t\t\tx: 0,\r\n\t\t\t\tlevel: 0,\r\n\t\t\t},\r\n\t\t];\r\n\t\tthis.backgroundX = 0;\r\n\t\tthis.backgroundX2 = this.world.width;\r\n\t\tthis.bgImgYOffset = 0;\r\n\t\tthis.bgImgYOffset2 = 0;\r\n\t\tthis.gameOver = false;\r\n\t\tthis.collisionMargin = 26;\r\n\t\tthis.imagePaths = [\r\n\t\t\t'../public/bgLevel1.png',\r\n\t\t\t'../public/bgLevel2.png',\r\n\t\t\t// Platform Textures\r\n\t\t\t'../public/woodPlat.png',\r\n\t\t\t'../public/dirtPlat.png',\r\n\t\t\t// Decor\r\n\t\t\t'../public/startSign.png',\r\n\t\t\t// Obsticles\r\n\t\t\t'../public/rock1.png',\r\n\t\t\t'../public/rock2.png',\r\n\t\t\t'../public/rock3.png',\r\n\t\t];\r\n\t\tthis.images = {};\r\n\t\tthis.bgImg1 = '';\r\n\t\tthis.bgImg2 = '';\r\n\t\tthis.gameCompleted = false;\r\n\t}\r\n\r\n\tpublic async setUp() {\r\n\t\tconst preloadImages = () => {\r\n\t\t\tconst promises = this.imagePaths.map((path: string) => {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tconst name = path.split('/').pop()?.split('.')[0];\r\n\t\t\t\t\tconst image = new Image();\r\n\r\n\t\t\t\t\timage.src = path;\r\n\t\t\t\t\timage.onload = () => {\r\n\t\t\t\t\t\tresolve([name, image]);\r\n\t\t\t\t\t};\r\n\t\t\t\t\timage.onerror = () => reject(`Image failed to load: ${path}`);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn Promise.all(promises);\r\n\t\t};\r\n\r\n\t\tconst imgArraytemp: any[] = await preloadImages();\r\n\t\tthis.images = Object.fromEntries(imgArraytemp);\r\n\t}\r\n\r\n\tprivate nextPlatform() {\r\n\t\tconst lastVisiblePlat: IVisiblePlat = this.platsVisible[this.platsVisible.length - 1];\r\n\t\tconst platsRef: IPlatform[] = this.gameObject.levels[this.currentLevel].platforms;\r\n\t\tconst lastPlatRef: IPlatform = platsRef[lastVisiblePlat.index];\r\n\t\t// const nextPlat: IPlatform = platsRef[lastVisiblePlat.index + 1];\r\n\r\n\t\tif (lastVisiblePlat.index === platsRef.length - 1) {\r\n\t\t\tif (!this.gameObject.levels[this.currentLevel + 1]) {\r\n\t\t\t\tthis.gameCompleted = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.currentLevel += 1;\r\n\r\n\t\t\tthis.platsVisible.push({\r\n\t\t\t\tindex: 0,\r\n\t\t\t\tx: lastVisiblePlat.x + lastPlatRef.len + lastPlatRef.gapToNext,\r\n\t\t\t\tlevel: this.currentLevel,\r\n\t\t\t});\r\n\r\n\t\t\tif (this.platsVisible[0].x + platsRef[this.platsVisible[0].index].len < 0) this.platsVisible.shift();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (lastVisiblePlat.index === 0) {\r\n\t\t\tthis.hud.currentLevel = this.currentLevel;\r\n\t\t\tthis.hud.beginLevelTextAnimation();\r\n\t\t}\r\n\r\n\t\tthis.platsVisible.push({\r\n\t\t\tindex: lastVisiblePlat.index + 1,\r\n\t\t\tx: lastVisiblePlat.x + lastPlatRef.len + lastPlatRef.gapToNext,\r\n\t\t\tlevel: this.currentLevel,\r\n\t\t});\r\n\r\n\t\tif (this.platsVisible[0].x + platsRef[this.platsVisible[0].index].len < 0) this.platsVisible.shift();\r\n\t}\r\n\r\n\tpublic move() {\r\n\t\tif (this.gameCompleted) return;\r\n\r\n\t\tconst level: ILevel = this.gameObject.levels[this.currentLevel];\r\n\t\tconst platRef: IPlatform = level.platforms[this.platsVisible[this.platsVisible.length - 1].index];\r\n\r\n\t\tconst lastPlatX = this.platsVisible[this.platsVisible.length - 1].x;\r\n\r\n\t\tif (lastPlatX + platRef.len <= this.world.width) this.nextPlatform();\r\n\r\n\t\tfor (let i = 0; i < this.platsVisible.length; i++) this.platsVisible[i].x -= level.speed;\r\n\t\tthis.backgroundX -= level.speed / 8;\r\n\t\tif (this.bgImg2) this.backgroundX2 -= level.speed / 8;\r\n\t}\r\n\r\n\tprivate drawDecorForPlat(decor: IPlatObject[], platYTop: number, platX: number, platLen: number) {\r\n\t\tfor (let i = 0; i < decor?.length; i++) {\r\n\t\t\tconst imgSrc: HTMLImageElement = this.images[decor[i].name];\r\n\t\t\tconst decorXVals = decor[i].xLocsOnPlatByPerc;\r\n\r\n\t\t\tfor (let i = 0; i < decorXVals?.length; i++) {\r\n\t\t\t\tthis.ctx.drawImage(\r\n\t\t\t\t\timgSrc,\r\n\t\t\t\t\tplatX + platLen * decorXVals[i],\r\n\t\t\t\t\tplatYTop - this.images[decor[i].name].height + 10,\r\n\t\t\t\t\tthis.images[decor[i].name].width,\r\n\t\t\t\t\tthis.images[decor[i].name].height\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate drawObsticleOnPlat(\r\n\t\tobsticles: IPlatObject[],\r\n\t\tplatYTop: number,\r\n\t\tplatX: number,\r\n\t\tplatLen: number,\r\n\t\tplatIndex: number\r\n\t) {\r\n\t\tfor (let i = 0; i < obsticles?.length; i++) {\r\n\t\t\tconst imgSrc: HTMLImageElement = this.images[obsticles[i].name];\r\n\t\t\tconst obsticleXVals = obsticles[i].xLocsOnPlatByPerc;\r\n\r\n\t\t\tfor (let i = 0; i < obsticleXVals?.length; i++) {\r\n\t\t\t\tthis.ctx.drawImage(\r\n\t\t\t\t\timgSrc,\r\n\t\t\t\t\tplatX + platLen * obsticleXVals[i],\r\n\t\t\t\t\tplatYTop - this.images[obsticles[i].name].height + 10,\r\n\t\t\t\t\tthis.images[obsticles[i].name].width,\r\n\t\t\t\t\tthis.images[obsticles[i].name].height\r\n\t\t\t\t);\r\n\r\n\t\t\t\tthis.collisions.checkForCollision({\r\n\t\t\t\t\tx1: this.player.x,\r\n\t\t\t\t\ty1: this.player.y,\r\n\t\t\t\t\tx2: platX + platLen * obsticleXVals[i],\r\n\t\t\t\t\ty2: platYTop - this.images[obsticles[i].name].height + 10,\r\n\t\t\t\t\tw1: this.player.w,\r\n\t\t\t\t\th1: this.player.h,\r\n\t\t\t\t\tw2: this.images[obsticles[i].name].width,\r\n\t\t\t\t\th2:\r\n\t\t\t\t\t\tthis.images[obsticles[i].name].height ||\r\n\t\t\t\t\t\tthis.world.height - (platYTop - this.images[obsticles[i].name].height + 10),\r\n\t\t\t\t\tmargin: this.collisionMargin,\r\n\t\t\t\t\tobject: `${obsticles[i].name}_${platIndex}_${obsticleXVals[i]}`,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate drawBgImage() {\r\n\t\t// If no bg image 1, assign to it and assign it's y offset\r\n\t\tif (!this.bgImg1.length) {\r\n\t\t\tthis.bgImgYOffset = this.gameObject.levels[this.currentLevel].bgImgYOffset;\r\n\t\t\tthis.bgImg1 = this.gameObject.levels[this.currentLevel].backgroundImg;\r\n\t\t}\r\n\r\n\t\tif (this.bgImg2.length && this.backgroundX2 <= 0) {\r\n\t\t\tthis.bgImg1 = this.gameObject.levels[this.currentLevel].backgroundImg;\r\n\t\t\tthis.bgImg2 = '';\r\n\t\t\tthis.backgroundX = this.backgroundX2;\r\n\t\t\tthis.backgroundX2 = this.world.width;\r\n\t\t\tthis.bgImgYOffset = this.bgImgYOffset2;\r\n\t\t\tthis.bgImgYOffset2 = 0;\r\n\t\t}\r\n\r\n\t\tconst bgImage1 = this.images[this.bgImg1]; // Left Side Background\r\n\r\n\t\tif (\r\n\t\t\t(this.backgroundX + bgImage1.width < this.world.width ||\r\n\t\t\t\tthis.platsVisible[0].level !== this.currentLevel) &&\r\n\t\t\t!this.bgImg2.length\r\n\t\t) {\r\n\t\t\tthis.backgroundX2 = this.world.width;\r\n\t\t\tthis.bgImgYOffset2 = this.gameObject.levels[this.currentLevel].bgImgYOffset;\r\n\t\t\tthis.bgImg2 = this.gameObject.levels[this.currentLevel].backgroundImg;\r\n\t\t}\r\n\r\n\t\tconst bgImage2 = this.images?.[this.bgImg2]; // Right Side Background\r\n\r\n\t\t// this.ctx.drawImage(\r\n\t\t// \tbgImage1,\r\n\t\t// \t0,\r\n\t\t// \tbgImage1.height - bgImage1.height * this.bgImgScaler,\r\n\t\t// \tbgImage1.width * this.bgImgScaler,\r\n\t\t// \tbgImage1.height * this.bgImgScaler,\r\n\t\t// \tthis.backgroundX,\r\n\t\t// \tthis.world.height + this.bgImgYOffset,\r\n\t\t// \tbgImage1.width,\r\n\t\t// \t-bgImage1.height\r\n\t\t// );\r\n\t\t// console.log(this.world.width / bgImage1.width);\r\n\r\n\t\tthis.ctx.drawImage(\r\n\t\t\tbgImage1,\r\n\t\t\t-this.backgroundX,\r\n\t\t\tbgImage1.height,\r\n\t\t\tbgImage1.width * (this.world.width / bgImage1.width),\r\n\t\t\t-bgImage1.height * (this.world.height / bgImage1.height),\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tthis.world.width,\r\n\t\t\tthis.world.height\r\n\t\t);\r\n\r\n\t\tif (bgImage2) {\r\n\t\t\t// this.ctx.drawImage(\r\n\t\t\t// \tbgImage2,\r\n\t\t\t// \t0,\r\n\t\t\t// \tbgImage2.height - bgImage2.height * this.bgImgScaler2,\r\n\t\t\t// \tbgImage2.width * this.bgImgScaler2,\r\n\t\t\t// \tbgImage2.height * this.bgImgScaler2,\r\n\t\t\t// \tthis.backgroundX2,\r\n\t\t\t// \tthis.world.height + this.bgImgYOffset2,\r\n\t\t\t// \tbgImage2.width,\r\n\t\t\t// \t-bgImage2.height\r\n\t\t\t// );\r\n\t\t\tthis.ctx.drawImage(\r\n\t\t\t\tbgImage2,\r\n\t\t\t\t-this.backgroundX2,\r\n\t\t\t\tbgImage2.height,\r\n\t\t\t\tbgImage2.width * (this.world.width / bgImage2.width),\r\n\t\t\t\t-bgImage2.height * (this.world.height / bgImage2.height),\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\tthis.world.width,\r\n\t\t\t\tthis.world.height\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic draw() {\r\n\t\tthis.drawBgImage();\r\n\r\n\t\tlet isFalling = true;\r\n\t\tfor (let i = 0; i < this.platsVisible.length; i++) {\r\n\t\t\tconst level: ILevel = this.gameObject.levels[this.platsVisible[i].level];\r\n\t\t\tconst imgW =\r\n\t\t\t\tthis.images[level.platformTexture].width *\r\n\t\t\t\t(level.platforms[this.platsVisible[i].index].len / level.maxPlatLen);\r\n\r\n\t\t\tconst platform: IPlatform =\r\n\t\t\t\tthis.gameObject.levels[this.platsVisible[i].level].platforms[this.platsVisible[i].index] || [];\r\n\r\n\t\t\tif (platform?.decor) {\r\n\t\t\t\tthis.drawDecorForPlat(\r\n\t\t\t\t\tplatform.decor,\r\n\t\t\t\t\tlevel.platforms[this.platsVisible[i].index].y,\r\n\t\t\t\t\tthis.platsVisible[i].x,\r\n\t\t\t\t\tlevel.platforms[this.platsVisible[i].index].len\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (platform?.obsticles) {\r\n\t\t\t\tthis.drawObsticleOnPlat(\r\n\t\t\t\t\tplatform.obsticles,\r\n\t\t\t\t\tplatform.y,\r\n\t\t\t\t\tthis.platsVisible[i].x,\r\n\t\t\t\t\tplatform.len,\r\n\t\t\t\t\tthis.platsVisible[i].index\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (platform?.powerUps) {\r\n\t\t\t\tthis.abilities.draw(\r\n\t\t\t\t\tplatform.powerUps,\r\n\t\t\t\t\tplatform.y,\r\n\t\t\t\t\tthis.platsVisible[i].x,\r\n\t\t\t\t\tplatform.len,\r\n\t\t\t\t\tthis.platsVisible[i].index\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (level.platformH) {\r\n\t\t\t\tthis.ctx.drawImage(\r\n\t\t\t\t\tthis.images[level.platformTexture],\r\n\t\t\t\t\t0,\r\n\t\t\t\t\t0,\r\n\t\t\t\t\timgW,\r\n\t\t\t\t\tthis.images[level.platformTexture].height,\r\n\t\t\t\t\tthis.platsVisible[i].x,\r\n\t\t\t\t\tlevel.platforms[this.platsVisible[i].index].y,\r\n\t\t\t\t\tlevel.platforms[this.platsVisible[i].index].len,\r\n\t\t\t\t\tlevel.platformH\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tthis.ctx.drawImage(\r\n\t\t\t\t\tthis.images[level.platformTexture],\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tthis.images[level.platformTexture].height,\r\n\t\t\t\t\timgW,\r\n\t\t\t\t\t-2.5 *\r\n\t\t\t\t\t\tthis.images[level.platformTexture].height *\r\n\t\t\t\t\t\t((this.world.height - level.platforms[this.platsVisible[i].index].y) /\r\n\t\t\t\t\t\t\tthis.images[level.platformTexture].height),\r\n\t\t\t\t\tthis.platsVisible[i].x,\r\n\t\t\t\t\tlevel.platforms[this.platsVisible[i].index].y,\r\n\t\t\t\t\tlevel.platforms[this.platsVisible[i].index].len,\r\n\t\t\t\t\tthis.world.height - level.platforms[this.platsVisible[i].index].y\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// this.ctx.strokeStyle = 'black';\r\n\t\t\t\t// this.ctx.rect(\r\n\t\t\t\t// \tplat.x,\r\n\t\t\t\t// \tlevel.platforms[plat.index].y,\r\n\t\t\t\t// \tlevel.platforms[plat.index].len,\r\n\t\t\t\t// \tthis.world.height - level.platforms[plat.index].y\r\n\t\t\t\t// );\r\n\t\t\t\t// this.ctx.stroke();\r\n\t\t\t}\r\n\r\n\t\t\tconst isColliding = this.collisions.checkForPlatCollision({\r\n\t\t\t\tx1: this.player.x,\r\n\t\t\t\ty1: this.player.y,\r\n\t\t\t\tx2: this.platsVisible[i].x,\r\n\t\t\t\ty2: level.platforms[this.platsVisible[i].index].y,\r\n\t\t\t\tw1: this.player.w,\r\n\t\t\t\th1: this.player.h,\r\n\t\t\t\tw2: level.platforms[this.platsVisible[i].index].len,\r\n\t\t\t\th2: level.platformH || this.world.height - level.platforms[this.platsVisible[i].index].y,\r\n\t\t\t\tmargin: this.collisionMargin,\r\n\t\t\t\tobject: `${this.currentLevel}_${this.platsVisible[i].index}`,\r\n\t\t\t});\r\n\r\n\t\t\tif (isColliding) isFalling = false;\r\n\r\n\t\t\t// this.ctx.fillStyle = 'rgba(0, 0, 0, 0.3)';\r\n\t\t\t// this.ctx.beginPath();\r\n\t\t\t// this.ctx.rect(this.platforms[i].x, this.platforms[i].y, this.platforms[i].w, this.h);\r\n\t\t\t// this.ctx.fill();\r\n\t\t}\r\n\r\n\t\tif (isFalling) this.player.isInAir = true;\r\n\t}\r\n}\r\n","import Hud from './hud';\r\nimport { Context } from './types';\r\n\r\nexport default class Player {\r\n\tprivate ctx: Context;\r\n\tprivate world: HTMLCanvasElement;\r\n\tprivate hud: Hud;\r\n\tprivate aspectRatio: number;\r\n\tpublic x: number;\r\n\tpublic y: number;\r\n\tpublic w: number;\r\n\tpublic h: number;\r\n\tpublic isInAir: boolean;\r\n\tpublic maxJumpStart: number;\r\n\tpublic jumpVelStartReset: number;\r\n\tpublic jumpVelStart: number;\r\n\tpublic yVelocity: number;\r\n\tpublic yAcc: number;\r\n\tprivate rotation: number;\r\n\tprivate rotationSpeed: number;\r\n\tprivate isJumping: boolean;\r\n\tpublic loadingJump: boolean;\r\n\tprivate wheelRot: number;\r\n\tprivate rotCoordsForJump: { x: number; y: number };\r\n\tpublic speed: number;\r\n\tprivate imagePaths: string[];\r\n\tprivate images: any;\r\n\tprivate isBeingDamaged: boolean;\r\n\tprivate lastObjectHit: string;\r\n\r\n\tconstructor(ctx: Context, world: HTMLCanvasElement, hud: Hud) {\r\n\t\tthis.ctx = ctx;\r\n\t\tthis.world = world;\r\n\t\tthis.aspectRatio = 1.1;\r\n\t\tthis.x = 100;\r\n\t\tthis.y = 100;\r\n\t\tthis.w = 150;\r\n\t\tthis.h = this.w / this.aspectRatio;\r\n\t\tthis.isInAir = true;\r\n\t\tthis.maxJumpStart = 20;\r\n\t\tthis.jumpVelStartReset = 10;\r\n\t\tthis.jumpVelStart = this.jumpVelStartReset;\r\n\t\tthis.yVelocity = 0;\r\n\t\tthis.yAcc = 0.8;\r\n\t\tthis.rotation = 0;\r\n\t\tthis.rotationSpeed = 0;\r\n\t\tthis.isJumping = false;\r\n\t\tthis.loadingJump = false;\r\n\t\tthis.wheelRot = 0;\r\n\t\tthis.rotCoordsForJump = { x: 0, y: 0 };\r\n\t\tthis.speed = 0;\r\n\t\tthis.hud = hud;\r\n\t\tthis.imagePaths = [\r\n\t\t\t'../public/frame.png',\r\n\t\t\t'../public/frameDamaged.png',\r\n\t\t\t'../public/wheel.png',\r\n\t\t\t'../public/wheelDamaged.png',\r\n\t\t];\r\n\t\tthis.images = {};\r\n\t\tthis.isBeingDamaged = false;\r\n\t\tthis.lastObjectHit = '';\r\n\t}\r\n\r\n\tpublic async setUp() {\r\n\t\tconst preloadImages = () => {\r\n\t\t\tconst promises = this.imagePaths.map((path: string) => {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tconst name = path.split('/').pop()?.split('.')[0];\r\n\t\t\t\t\tconst image = new Image();\r\n\r\n\t\t\t\t\timage.src = path;\r\n\t\t\t\t\timage.onload = () => {\r\n\t\t\t\t\t\tresolve([name, image]);\r\n\t\t\t\t\t};\r\n\t\t\t\t\timage.onerror = () => reject(`Image failed to load: ${path}`);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn Promise.all(promises);\r\n\t\t};\r\n\r\n\t\tconst imgArraytemp: any[] = await preloadImages();\r\n\t\tthis.images = Object.fromEntries(imgArraytemp);\r\n\t\tthis.w = this.images.frame.width;\r\n\t\tthis.h = this.images.frame.height;\r\n\t}\r\n\r\n\tpublic changeToDamagedImgs(object: string) {\r\n\t\tif (object === this.lastObjectHit) return;\r\n\t\tthis.lastObjectHit = object;\r\n\t\tthis.isBeingDamaged = true;\r\n\t\tconst flashInterval = 50;\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.isBeingDamaged = false;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.isBeingDamaged = true;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.isBeingDamaged = false;\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tthis.isBeingDamaged = true;\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tthis.isBeingDamaged = false;\r\n\t\t\t\t\t\t}, flashInterval);\r\n\t\t\t\t\t}, flashInterval);\r\n\t\t\t\t}, flashInterval);\r\n\t\t\t}, flashInterval);\r\n\t\t}, flashInterval);\r\n\t}\r\n\r\n\tpublic land(y: number) {\r\n\t\tif (this.rotation < 0) return;\r\n\t\tthis.isInAir = false;\r\n\t\tthis.isJumping = false;\r\n\t\tthis.rotationSpeed = 0;\r\n\t\tthis.rotation = 0;\r\n\t\tthis.yVelocity = 0;\r\n\t\tthis.y = y - this.h;\r\n\t\tif (!this.loadingJump) this.jumpVelStart = this.jumpVelStartReset;\r\n\t}\r\n\r\n\tpublic jump() {\r\n\t\tthis.loadingJump = false;\r\n\t\tif (this.isJumping || this.isInAir || this.yVelocity < 0) return;\r\n\t\tthis.rotationSpeed = this.jumpVelStart;\r\n\t\tthis.isJumping = true;\r\n\r\n\t\tthis.isInAir = true;\r\n\t\tthis.yVelocity = this.jumpVelStart;\r\n\t\tthis.jumpVelStart = this.jumpVelStartReset;\r\n\t}\r\n\r\n\tprivate loadJump() {\r\n\t\tif (this.jumpVelStart < this.maxJumpStart) {\r\n\t\t\tthis.jumpVelStart += 0.5;\r\n\t\t\tthis.hud.drawJumpCharge(\r\n\t\t\t\t1 - (this.maxJumpStart - this.jumpVelStart) / (this.maxJumpStart - this.jumpVelStartReset),\r\n\t\t\t\tthis.x,\r\n\t\t\t\tthis.y\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.hud.drawJumpCharge(1, this.x, this.y);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate drawFrame() {\r\n\t\t// const yOffset = 5;\r\n\t\tthis.ctx.save();\r\n\t\tthis.ctx.translate(this.rotCoordsForJump.x, this.rotCoordsForJump.y);\r\n\t\tthis.ctx.rotate((this.rotation * Math.PI) / 180);\r\n\t\tthis.ctx.drawImage(\r\n\t\t\tthis.isBeingDamaged ? this.images.frameDamaged : this.images.frame,\r\n\t\t\t-this.images.wheel.width / 2,\r\n\t\t\t-this.h + this.images.wheel.height / 2,\r\n\t\t\tthis.w,\r\n\t\t\tthis.h\r\n\t\t);\r\n\t\tthis.ctx.restore();\r\n\t}\r\n\r\n\tprivate drawWheels() {\r\n\t\tconst rotOffset = this.hud.health >= 90 ? 0 : this.hud.health < 90 && this.hud.health >= 50 ? 1 : 2;\r\n\r\n\t\tthis.ctx.save();\r\n\t\tthis.ctx.translate(this.rotCoordsForJump.x + rotOffset, this.rotCoordsForJump.y);\r\n\t\tthis.ctx.rotate((this.rotation * Math.PI) / 180); // Rotate for jump\r\n\t\tthis.ctx.rotate((this.wheelRot * Math.PI) / 180); // Rotate for wheel spin\r\n\t\tthis.ctx.drawImage(\r\n\t\t\tthis.isBeingDamaged ? this.images.wheelDamaged : this.images.wheel,\r\n\t\t\t-this.images.wheel.width / 2 - rotOffset,\r\n\t\t\t-this.images.wheel.height / 2,\r\n\t\t\tthis.images.wheel.width - 0.5,\r\n\t\t\tthis.images.wheel.height - 0.5\r\n\t\t);\r\n\t\tthis.ctx.restore();\r\n\r\n\t\tthis.ctx.save();\r\n\t\tthis.ctx.translate(this.rotCoordsForJump.x, this.rotCoordsForJump.y + rotOffset);\r\n\t\tthis.ctx.rotate((this.rotation * Math.PI) / 180); // Rotate for jump\r\n\t\tthis.ctx.translate(-this.rotCoordsForJump.x, -this.rotCoordsForJump.y); // Move to start\r\n\t\tthis.ctx.translate(this.x + this.w - this.images.wheel.width / 2, this.rotCoordsForJump.y);\r\n\t\tthis.ctx.rotate((this.wheelRot * Math.PI) / 180); // Rotate for wheel spin\r\n\t\tthis.ctx.translate(-(this.x + this.w - this.images.wheel.width / 2), -this.rotCoordsForJump.y); // Move to start\r\n\t\tthis.ctx.translate(this.rotCoordsForJump.x, this.rotCoordsForJump.y);\r\n\r\n\t\tthis.ctx.drawImage(\r\n\t\t\tthis.isBeingDamaged ? this.images.wheelDamaged : this.images.wheel,\r\n\t\t\t-(this.rotCoordsForJump.x - this.x) + this.w - this.images.wheel.width,\r\n\t\t\t-this.images.wheel.height / 2 - rotOffset,\r\n\t\t\tthis.images.wheel.width - 0.5,\r\n\t\t\tthis.images.wheel.height - 0.5\r\n\t\t);\r\n\t\tthis.ctx.restore();\r\n\t}\r\n\r\n\tpublic draw() {\r\n\t\tif (!this.images?.frame) return;\r\n\t\tthis.wheelRot += this.speed;\r\n\t\t// this.wheelRot += 10;\r\n\r\n\t\tif (this.loadingJump) this.loadJump();\r\n\r\n\t\tthis.y -= this.yVelocity;\r\n\t\tif (this.isInAir) this.yVelocity -= this.yAcc;\r\n\r\n\t\tif (this.isJumping) {\r\n\t\t\tthis.rotation -= this.rotationSpeed / 4;\r\n\t\t\tthis.rotationSpeed -= this.yAcc * 2;\r\n\r\n\t\t\tif (this.rotation >= 5) {\r\n\t\t\t\tthis.rotationSpeed = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// this.ctx.fillStyle = 'rgb(0, 0, 0, 0.5)';\r\n\t\t// this.ctx.beginPath();\r\n\t\t// this.ctx.rect(this.x, this.y, this.w, this.h);\r\n\t\t// this.ctx.fill();\r\n\r\n\t\tthis.rotCoordsForJump = {\r\n\t\t\tx: this.x + this.images.wheel.width / 2,\r\n\t\t\ty: this.y + this.h - this.images.wheel.height / 2,\r\n\t\t};\r\n\r\n\t\tthis.drawWheels();\r\n\t\tthis.drawFrame();\r\n\t}\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(961);\n__webpack_require__(32);\n__webpack_require__(853);\n__webpack_require__(94);\n__webpack_require__(627);\n__webpack_require__(251);\nvar __webpack_exports__ = __webpack_require__(699);\n"],"names":["ctx","world","hud","collisions","player","this","imagePaths","images","collectedPowerUps","currentPowerUp","name","durationInSecs","setUp","preloadImages","promises","map","path","Promise","resolve","reject","split","pop","image","Image","src","onload","onerror","all","imgArraytemp","Object","fromEntries","finishPowerUp","ignoreObjectCollision","powerUpPercentUsed","usingPowerUp","usePowerUp","grabPowerUp","powerUp","increaseHealth","draw","powerUps","platYTop","platX","platLen","platIndex","i","length","imgSrc","imgX","xPercAlongPlat","imgY","height","distAbovePlat","object","includes","width","shift","drawImage","powerUpCollision","x1","x","y1","y","x2","y2","w1","w","h1","h","w2","h2","margin","push","checkForPlatCollision","playerRightOfPlatLeft","playerLeftOfPlatRight","playerAbovePlatBot","playerBelowPlatTop","isInAir","yVelocity","Math","abs","land","console","log","health","checkForCollision","reduceHealth","changeToDamagedImgs","framerate","lastObjectHit","drawingLevelText","levelTextOpacity","levelTextOpacityInc","currentLevel","fps","fpsEnabled","drawPowerUp","rInner","max","rOuter","xOffset","fillStyle","beginPath","ellipse","PI","fill","strokeStyle","lineWidth","circleSeparation","stroke","drawFps","font","textAlign","fillText","drawJumpCharge","percentCharged","roundRect","amt","drawHealth","sectionStartX","sectionStartY","sectionW","sectionH","drawNextLevelText","textBaseline","beginLevelTextAnimation","setTimeout","levels","platforms","len","gapToNext","decor","xLocsOnPlatByPerc","obsticles","platformTexture","platformH","backgroundImg","bgImgYOffset","maxPlatLen","speed","requestId","now","then","elapsed","fpsInterval","document","getElementById","getContext","alpha","startBtn","querySelector","paused","gameLoop","requestAnimationFrame","Date","clearRect","move","gameCompleted","cancelAnimationFrame","prepGame","style","display","innerHTML","freeze","addEventListener","e","code","loadingJump","jump","onclick","abilities","gameObject","platsVisible","index","level","backgroundX","backgroundX2","bgImgYOffset2","gameOver","collisionMargin","bgImg1","bgImg2","nextPlatform","lastVisiblePlat","platsRef","lastPlatRef","platRef","drawDecorForPlat","decorXVals","drawObsticleOnPlat","obsticleXVals","drawBgImage","bgImage1","bgImage2","isFalling","imgW","platform","aspectRatio","maxJumpStart","jumpVelStartReset","jumpVelStart","yAcc","rotation","rotationSpeed","isJumping","wheelRot","rotCoordsForJump","isBeingDamaged","frame","loadJump","drawFrame","save","translate","rotate","frameDamaged","wheel","restore","drawWheels","rotOffset","wheelDamaged","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}