{"version":3,"file":"bundle.js","mappings":"iEAKA,WAcC,WAAYA,EAAcC,EAA0BC,EAAUC,EAAwBC,GACrFC,KAAKL,IAAMA,EACXK,KAAKJ,MAAQA,EACbI,KAAKH,IAAMA,EACXG,KAAKF,WAAaA,EAClBE,KAAKD,OAASA,EACdC,KAAKC,WAAa,CAAC,4BAA6B,+BAChDD,KAAKE,OAAS,CAAC,EACfF,KAAKG,kBAAoB,GACzBH,KAAKI,eAAiB,CACrBC,KAAM,GACNC,eAAgB,EAElB,CA4GD,OA1Gc,YAAAC,MAAb,W,6pCAiB6B,OAhBtBC,EAAgB,WACrB,IAAMC,EAAW,EAAKR,WAAWS,KAAI,SAACC,GACrC,OAAO,IAAIC,SAAQ,SAACC,EAASC,G,MACtBT,EAA4B,QAArB,EAAAM,EAAKI,MAAM,KAAKC,aAAK,eAAED,MAAM,KAAK,GACzCE,EAAQ,IAAIC,MAElBD,EAAME,IAAMR,EACZM,EAAMG,OAAS,WACdP,EAAQ,CAACR,EAAMY,GAChB,EACAA,EAAMI,QAAU,WAAM,OAAAP,EAAO,gCAAyBH,GAAhC,CACvB,GACD,IACA,OAAOC,QAAQU,IAAIb,EACpB,EAE4B,GAAMD,K,cAA5Be,EAAsB,SAC5BvB,KAAKE,OAASsB,OAAOC,YAAYF,G,ySAG3B,YAAAG,cAAP,WAEO,kBADE1B,KAAKI,eAAeC,OAE1BL,KAAKF,WAAW6B,uBAAwB,EACxC3B,KAAKD,OAAO6B,iBAAkB,GAMhC5B,KAAKI,eAAiB,CACrBC,KAAM,GACNC,eAAgB,GAEjBN,KAAKH,IAAIO,eAAiBJ,KAAKI,eAC/BJ,KAAKH,IAAIgC,mBAAqB,EAC9B7B,KAAKH,IAAIiC,cAAe,CACzB,EAEO,YAAAC,WAAP,WAEO,kBADE/B,KAAKI,eAAeC,OAE1BL,KAAKF,WAAW6B,uBAAwB,EACxC3B,KAAKH,IAAIiC,cAAe,EACxB9B,KAAKD,OAAO6B,iBAAkB,EAKjC,EAEQ,YAAAI,YAAR,SAAoBC,GACnB,OAAQA,GACP,IAAK,cACJjC,KAAKH,IAAIqC,eAAe,IACxB,MACD,IAAK,gBACJ,GAAIlC,KAAKI,eAAeC,KAAM,OAC9BL,KAAKI,eAAiB,CACrBC,KAAM4B,EACN3B,eAAgB,GAEjBN,KAAKH,IAAIO,eAAiBJ,KAAKI,eAGlC,EAEO,YAAA+B,KAAP,SAAYC,EAAsBC,EAAkBC,EAAeC,EAAiBC,GACnF,IAAK,IAAIC,EAAI,EAAGA,GAAIL,aAAQ,EAARA,EAAUM,QAAQD,IAAK,CAC1C,IAAME,EAA2B3C,KAAKE,OAAOkC,EAASK,GAAGpC,MAEzD,GAAKsC,EAAL,CAEA,IAAMC,EAAON,EAAQC,EAAUH,EAASK,GAAGI,eACrCC,EAAOT,EAAWM,EAAOI,OAAS,GAAKX,EAASK,GAAGO,cACnDC,EAAS,UAAGb,EAASK,GAAGpC,KAAI,YAAImC,EAAS,YAAIJ,EAASK,GAAGI,gBAE3D7C,KAAKG,kBAAkB+C,SAASD,GAC/BL,EAAOD,EAAOQ,MAAQ,GAAGnD,KAAKG,kBAAkBiD,SAIrDpD,KAAKL,IAAI0D,UAAUV,EAAQC,EAAME,EAAMH,EAAOQ,MAAOR,EAAOI,QAEhC/C,KAAKF,WAAWwD,iBAAiB,CAC5DC,GAAIvD,KAAKD,OAAOyD,EAChBC,GAAIzD,KAAKD,OAAO2D,EAChBC,GAAIf,EACJgB,GAAId,EACJe,GAAI7D,KAAKD,OAAO+D,EAChBC,GAAI/D,KAAKD,OAAOiE,EAChBC,GAAIjE,KAAKE,OAAOkC,EAASK,GAAGpC,MAAM8C,MAClCe,GACClE,KAAKE,OAAOkC,EAASK,GAAGpC,MAAM0C,QAC9B/C,KAAKJ,MAAMmD,QAAUV,EAAWrC,KAAKE,OAAOkC,EAASK,GAAGpC,MAAM0C,OAAS,IACxEoB,OAAQ,EACRlB,OAAQA,MAIRjD,KAAKG,kBAAkBiE,KAAKnB,GAC5BjD,KAAKgC,YAAYI,EAASK,GAAGpC,OA9BT,C,CAiCvB,EACD,EAvIA,E,wCCDA,WAOC,WAAYV,EAAcC,EAA0BG,EAAgBF,GACnEG,KAAKL,IAAMA,EACXK,KAAKJ,MAAQA,EACbI,KAAKD,OAASA,EACdC,KAAKH,IAAMA,EACXG,KAAK2B,uBAAwB,CAC9B,CA2ED,OAzEQ,YAAA0C,sBAAP,SAA6B,G,IAC5Bd,EAAE,KACFE,EAAE,KACFE,EAAE,KACFC,EAAE,KACFC,EAAE,KACFE,EAAE,KACFE,EAAE,KACFC,EAAE,KACF,IAAAC,OAAAA,OAAM,IAAG,IAAC,EAGJG,GAFA,SAEwBf,EAAKM,GAAMF,EAAKQ,GACxCI,EAAwBhB,GAAMI,EAAKM,EACnCO,EAAqBf,GAAMG,EAAKM,EAChCO,EAAqBhB,EAAKzD,KAAKD,OAAOiE,EAAIJ,GAAM5D,KAAKD,OAAO2E,QAAUP,EAAS,GAErF,GAAIG,GAAyBC,GAAyBC,EAAoB,CAEzE,GAAIxE,KAAKD,OAAO4E,WAAa,GAAKC,KAAKC,IAAIjB,GAAMH,EAAKM,IAAO,GAE5D,OADA/D,KAAKD,OAAO+E,KAAKlB,IACV,EACD,GAAIa,EAGV,OAFAM,QAAQC,IAAI,uBACZhF,KAAKH,IAAIoF,OAAS,GACX,C,CAGT,OAAIjF,KAAKD,OAAO2D,EAAI1D,KAAKD,OAAOiE,EAAIhE,KAAKJ,MAAMmD,SAC9C/C,KAAKH,IAAIoF,OAAS,EAClBF,QAAQC,IAAI,6BACL,EAGT,EAEO,YAAAE,kBAAP,SAAyB,G,IACxB3B,EAAE,KACFE,EAAE,KACFE,EAAE,KACFC,EAAE,KACFC,EAAE,KACFE,EAAE,KACFE,EAAE,KACFC,EAAE,KACF,IAAAiB,WAAAA,OAAU,IAAG,IAAC,EACd,IAAAC,YAAAA,OAAW,IAAG,IAAC,EACf,IAAAC,UAAAA,OAAS,IAAG,IAAC,EACbpC,EAAM,SAEFjD,KAAK2B,uBAER4B,EAAKM,GAAMF,EAAKwB,GAChB5B,GAAMI,EAAKM,EAAKmB,GAChB3B,GAAMG,EAAKM,EAAKmB,GAChB5B,EAAKM,EAAKH,IAEV5D,KAAKH,IAAIyF,aAAarC,EAAQ,IAC9BjD,KAAKD,OAAOwF,oBAAoBtC,GAElC,EAEO,YAAAK,iBAAP,SAAwB,G,IAAEC,EAAE,KAAEE,EAAE,KAAEE,EAAE,KAAEC,EAAE,KAAEC,EAAE,KAAEE,EAAE,KAAEE,EAAE,KAAEC,EAAE,KAAE,IAAAC,OAAAA,OAAM,IAAG,IAAC,EACnE,OAD2E,SAE1EZ,EAAKM,GAAMF,EAAKQ,GAChBZ,GAAMI,EAAKM,GACXR,GAAMG,EAAKM,GACXT,EAAKM,EAAKH,CAKZ,EACD,EAxFA,E,yCCFA,WAqBC,WAAYjE,EAAcC,EAA0B4F,GACnDxF,KAAKL,IAAMA,EACXK,KAAKJ,MAAQA,EACbI,KAAKiF,OAAS,IACdjF,KAAKyF,cAAgB,GACrBzF,KAAK0F,kBAAmB,EACxB1F,KAAK2F,iBAAmB,EACxB3F,KAAK4F,oBAAsB,IAC3B5F,KAAK6F,aAAe,EACpB7F,KAAK8F,IAAM,EACX9F,KAAKwF,UAAYA,EACjBxF,KAAK+F,YAAa,EAClB/F,KAAKC,WAAa,CAAC,+BACnBD,KAAKE,OAAS,CAAC,EACfF,KAAKI,eAAiB,CACrBC,KAAM,GACNC,eAAgB,GAEjBN,KAAK6B,mBAAqB,EAC1B7B,KAAK8B,cAAe,CACrB,CAiMD,OA/Lc,YAAAvB,MAAb,W,6pCAiB6B,OAhBtBC,EAAgB,WACrB,IAAMC,EAAW,EAAKR,WAAWS,KAAI,SAACC,GACrC,OAAO,IAAIC,SAAQ,SAACC,EAASC,G,MACtBT,EAA4B,QAArB,EAAAM,EAAKI,MAAM,KAAKC,aAAK,eAAED,MAAM,KAAK,GACzCE,EAAQ,IAAIC,MAElBD,EAAME,IAAMR,EACZM,EAAMG,OAAS,WACdP,EAAQ,CAACR,EAAMY,GAChB,EACAA,EAAMI,QAAU,WAAM,OAAAP,EAAO,gCAAyBH,GAAhC,CACvB,GACD,IACA,OAAOC,QAAQU,IAAIb,EACpB,EAE4B,GAAMD,K,cAA5Be,EAAsB,SAC5BvB,KAAKE,OAASsB,OAAOC,YAAYF,G,ySAG1B,YAAAyE,YAAR,WACC,GAAKhG,KAAKI,eAAeC,KAAzB,CAEA,IAAMyD,EAAI9D,KAAKE,OAAOF,KAAKI,eAAeC,MAAM8C,MAC1Ca,EAAIhE,KAAKE,OAAOF,KAAKI,eAAeC,MAAM0C,OAE1CkD,EAASrB,KAAKsB,IAAIpC,EAAGE,GAAK,EAAI,GAC9BmC,EAASF,EAFU,EAGnBG,GAAW,GAIjBpG,KAAKL,IAAI0G,UAAY,qBACrBrG,KAAKL,IAAI2G,YACTtG,KAAKL,IAAI4G,QACRvG,KAAKJ,MAAMuD,MAAQ8C,EAASG,EAC5BH,EAPe,GAQfA,EACAA,EACA,EAAIrB,KAAK4B,GACT,EACA,EAAI5B,KAAK4B,IAEVxG,KAAKL,IAAI8G,OAGTzG,KAAKL,IAAI+G,YAAc,sBACvB1G,KAAKL,IAAIgH,UAAYC,EACrB5G,KAAKL,IAAI2G,YACTtG,KAAKL,IAAI4G,QACRvG,KAAKJ,MAAMuD,MAAQgD,EAASC,EAzBJ,EA0BxBD,EAtBe,GAJS,EA2BxBA,EAASS,EAAuB,EAChCT,EAASS,EAAuB,EAChC,EAAIhC,KAAK4B,IACR5B,KAAK4B,GAAK,EACV,EAAI5B,KAAK4B,GAAM,GAEjBxG,KAAKL,IAAIkH,SAGT7G,KAAKL,IAAI+G,YAAc,qBACvB1G,KAAKL,IAAIgH,UArCgB,EAsCzB3G,KAAKL,IAAI2G,YACTtG,KAAKL,IAAI4G,QACRvG,KAAKJ,MAAMuD,MAAQgD,EAASC,EAxCJ,EAyCxBD,EArCe,GAJS,EA0CxBA,EAASS,EACTT,EAASS,EACT,EAAIhC,KAAK4B,IACR5B,KAAK4B,GAAK,EAAI,EAAI5B,KAAK4B,GAAKxG,KAAK6B,mBACjC,EAAI+C,KAAK4B,GAAM,GAEjBxG,KAAKL,IAAIkH,SAET7G,KAAKL,IAAI0D,UACRrD,KAAKE,OAAOF,KAAKI,eAAeC,MAChCL,KAAKJ,MAAMuD,MAAQ8C,EAASnC,EAAI,EAAIsC,EAhDrB,GAiDLH,EAASjC,EAAI,EACvBF,EACAE,GAGGhE,KAAK8B,eACR9B,KAAK6B,oBAAsB,GAAK7B,KAAKwF,UAAYxF,KAAKI,eAAeE,gBA/DjC,CAiEtC,EAEQ,YAAAwG,QAAR,WACM9G,KAAK+F,aAEV/F,KAAKL,IAAIoH,KAAO,aAChB/G,KAAKL,IAAI0G,UAAY,qBACrBrG,KAAKL,IAAIqH,UAAY,QACrBhH,KAAKL,IAAIsH,SAAS,UAAGjH,KAAK8F,IAAG,QAAQ9F,KAAKJ,MAAMuD,MAAQ,GAAI,IAC7D,EAEO,YAAA+D,eAAP,SAAsBC,EAAwB3D,EAAWE,GAKxD1D,KAAKL,IAAI+G,YAAc,kBACvB1G,KAAKL,IAAIgH,UAAY,EACrB3G,KAAKL,IAAI0G,UAAY,iBACrBrG,KAAKL,IAAI2G,YACTtG,KAAKL,IAAIyH,UAAU5D,EANH,EAMiB,EAAGE,GALpB,GAKkC,EAAGI,GAAOE,GAAO,GACnEhE,KAAKL,IAAIkH,SAET7G,KAAKL,IAAI2G,YACTtG,KAAKL,IAAIyH,UAAU5D,EAVH,EAUgBE,GAThB,GAFN,GADA,GACA,GAW+CyD,EAAgB,GACzEnH,KAAKL,IAAI8G,MACV,EAEO,YAAAnB,aAAP,SAAoBrC,EAAgBoE,GAC/BrH,KAAKyF,gBAAkBxC,IACvBjD,KAAKiF,OAASoC,GAAO,EAAGrH,KAAKiF,OAAS,EACrCjF,KAAKiF,QAAUoC,EAEpBrH,KAAKyF,cAAgBxC,EACtB,EAEO,YAAAf,eAAP,SAAsBmF,GACjBrH,KAAKiF,OAASoC,GAAO,IAAKrH,KAAKiF,OAAS,IACvCjF,KAAKiF,QAAUoC,CACrB,EAEQ,YAAAC,WAAR,WAMCtH,KAAKL,IAAI0G,UAAY,qBACrBrG,KAAKL,IAAI2G,YACTtG,KAAKL,IAAIyH,UAAUG,GAAmBC,EAAmBC,IAAcC,GAAc,IACrF1H,KAAKL,IAAI8G,OAETzG,KAAKL,IAAI0G,UACRrG,KAAKiF,QAAU,GACZ,qBACAjF,KAAKiF,QAAU,IAAMjF,KAAKiF,OAAS,GACnC,uBACA,qBACJjF,KAAKL,IAAI2G,YACTtG,KAAKL,IAAIyH,UAjBa,GACA,GAgBuCpH,KAAKiF,OAAS,IAf1D,IACA,GAc0E,IAC3FjF,KAAKL,IAAI8G,MACV,EAEQ,YAAAkB,kBAAR,WAKC3H,KAAKL,IAAI0G,UAAY,wBAAiBrG,KAAK2F,kBAAoB,GAAM,GAAM3F,KAAK2F,iBAAgB,KAChG3F,KAAKL,IAAI2G,YACTtG,KAAKL,IAAIyH,UAAUpH,KAAKJ,MAAMuD,MAAQ,EAAIW,IAAO9D,KAAKJ,MAAMmD,OAAS,EAAIiB,GAJzD,IAFN,IACA,GAKsF,IAChGhE,KAAKL,IAAI8G,OAETzG,KAAKL,IAAIoH,KAAO,aAChB/G,KAAKL,IAAI0G,UAAY,8BAAuBrG,KAAK2F,iBAAgB,KACjE3F,KAAKL,IAAIqH,UAAY,SACrBhH,KAAKL,IAAIiI,aAAe,SACxB5H,KAAKL,IAAIsH,SACR,gBAASjH,KAAK6F,aAAe,GAC7B7F,KAAKJ,MAAMuD,MAAQ,EACnBnD,KAAKJ,MAAMmD,OAAS,EAdL,KAiBhB/C,KAAK2F,kBAAoB3F,KAAK4F,mBAC/B,EAEO,YAAAiC,wBAAP,sBACC7H,KAAK0F,kBAAmB,EACxBoC,YAAW,WACV,EAAKlC,sBAAwB,EAC7BkC,YAAW,WACV,EAAKpC,kBAAmB,EACxB,EAAKE,sBAAwB,CAC9B,GAAG,KACJ,GAAG,KACJ,EAEO,YAAAzD,KAAP,WACCnC,KAAKsH,aACLtH,KAAK8G,UACL9G,KAAKgG,cAEDhG,KAAK0F,kBAAkB1F,KAAK2H,mBACjC,EACD,EA1OA,E,eCqHA,QAJgC,CAC/BI,OAAQ,CAlHgB,CACxBC,UAAW,CACV,CACCtE,EAAG,IACHuE,IAAK,IACLC,UAAW,EACXC,MAAO,CACN,CAAE9H,KAAM,YAAa+H,kBAAmB,CAAC,KACzC,CAAE/H,KAAM,WAAY+H,kBAAmB,CAAC,MAEzCC,UAAW,CAAC,CAAEhI,KAAM,YAAa+H,kBAAmB,CAAC,OAEtD,CACC1E,EAAG,IACHuE,IAAK,IACLC,UAAW,GAEZ,CACCxE,EAAG,IACHuE,IAAK,IACLC,UAAW,GAEZ,CAAExE,EAAG,IAAKuE,IAAK,IAAKC,UAAW,GAC/B,CAAExE,EAAG,IAAKuE,IAAK,IAAMC,UAAW,EAAGG,UAAW,CAAC,CAAEhI,KAAM,QAAS+H,kBAAmB,CAAC,OACpF,CAAE1E,EAAG,IAAKuE,IAAK,KAAMC,UAAW,GAChC,CAAExE,EAAG,IAAKuE,IAAK,IAAMC,UAAW,EAAGG,UAAW,CAAC,CAAEhI,KAAM,QAAS+H,kBAAmB,CAAC,OACpF,CAAE1E,EAAG,IAAKuE,IAAK,IAAMC,UAAW,GAChC,CAAExE,EAAG,IAAKuE,IAAK,IAAKC,UAAW,GAC/B,CACCxE,EAAG,IACHuE,IAAK,IACLC,UAAW,EACX9F,SAAU,CAAC,CAAE/B,KAAM,gBAAiBwC,eAAgB,GAAKG,cAAe,OAEzE,CAAEU,EAAG,IAAKuE,IAAK,IAAMC,UAAW,EAAGG,UAAW,CAAC,CAAEhI,KAAM,QAAS+H,kBAAmB,CAAC,OACpF,CAAE1E,EAAG,IAAKuE,IAAK,IAAMC,UAAW,GAChC,CAAExE,EAAG,IAAKuE,IAAK,IAAMC,UAAW,EAAGG,UAAW,CAAC,CAAEhI,KAAM,QAAS+H,kBAAmB,CAAC,OACpF,CAAE1E,EAAG,IAAKuE,IAAK,IAAKC,UAAW,GAC/B,CAAExE,EAAG,IAAKuE,IAAK,KAAMC,UAAW,GAChC,CAAExE,EAAG,IAAKuE,IAAK,IAAMC,UAAW,EAAGG,UAAW,CAAC,CAAEhI,KAAM,QAAS+H,kBAAmB,CAAC,OACpF,CACC1E,EAAG,IACHuE,IAAK,IACLC,UAAW,EACX9F,SAAU,CAAC,CAAE/B,KAAM,cAAewC,eAAgB,GAAKG,cAAe,QAGxEsF,gBAAiB,WACjBC,UAAW,KACXC,cAAe,WACfC,aAAc,EACdC,WAAY,IACZC,MAAO,IAGiB,CACxBX,UAAW,CACV,CACCtE,EAAG,IACHuE,IAAK,IACLC,UAAW,GAEZ,CACCxE,EAAG,IACHuE,IAAK,IACLC,UAAW,KAEZ,CAAExE,EAAG,IAAKuE,IAAK,IAAMC,UAAW,EAAGG,UAAW,CAAC,CAAEhI,KAAM,QAAS+H,kBAAmB,CAAC,OACpF,CACC1E,EAAG,IACHuE,IAAK,IACLC,UAAW,EACX9F,SAAU,CAAC,CAAE/B,KAAM,gBAAiBwC,eAAgB,GAAKG,cAAe,OAEzE,CACCU,EAAG,IACHuE,IAAK,IACLC,UAAW,EACXG,UAAW,CAAC,CAAEhI,KAAM,QAAS+H,kBAAmB,CAAC,OAElD,CAAE1E,EAAG,IAAKuE,IAAK,KAAMC,UAAW,GAChC,CAAExE,EAAG,IAAKuE,IAAK,IAAMC,UAAW,EAAGG,UAAW,CAAC,CAAEhI,KAAM,QAAS+H,kBAAmB,CAAC,OACpF,CAAE1E,EAAG,IAAKuE,IAAK,IAAMC,UAAW,GAChC,CAAExE,EAAG,IAAKuE,IAAK,IAAKC,UAAW,GAC/B,CACCxE,EAAG,IACHuE,IAAK,IACLC,UAAW,GACX9F,SAAU,CAAC,CAAE/B,KAAM,cAAewC,eAAgB,GAAKG,cAAe,OAEvE,CACCU,EAAG,IACHuE,IAAK,IACLC,UAAW,GAEZ,CAAExE,EAAG,IAAKuE,IAAK,IAAKC,UAAW,EAAGG,UAAW,CAAC,CAAEhI,KAAM,QAAS+H,kBAAmB,CAAC,OACnF,CAAE1E,EAAG,IAAKuE,IAAK,IAAMC,UAAW,KAChC,CAAExE,EAAG,IAAKuE,IAAK,IAAMC,UAAW,EAAGG,UAAW,CAAC,CAAEhI,KAAM,QAAS+H,kBAAmB,CAAC,OACpF,CAAE1E,EAAG,IAAKuE,IAAK,IAAKC,UAAW,GAC/B,CAAExE,EAAG,IAAKuE,IAAK,KAAMC,UAAW,EAAGG,UAAW,CAAC,CAAEhI,KAAM,QAAS+H,kBAAmB,CAAC,OACpF,CAAE1E,EAAG,IAAKuE,IAAK,KAAMC,UAAW,KAChC,CAAExE,EAAG,IAAKuE,IAAK,IAAMC,UAAW,EAAGG,UAAW,CAAC,CAAEhI,KAAM,QAAS+H,kBAAmB,CAAC,OACpF,CAAE1E,EAAG,IAAKuE,IAAK,IAAMC,UAAW,GAChC,CAAExE,EAAG,IAAKuE,IAAK,IAAKC,UAAW,IAEhCI,gBAAiB,WACjBC,UAAW,GACXC,cAAe,WACfC,aAAc,EACdC,WAAY,IACZC,MAAO,M,ICnGJC,EAA0BC,EAAaC,EAAcC,EAAiBC,EAQtE,EAAsB,EAAgB,EAAU,EAAwB,E,4CAdtEpJ,EAA2BqJ,SAASC,eAAe,SACnDvJ,EAAgCC,EAAMuJ,WAAW,KAAM,CAAEC,OAAO,IAEhEC,EAA2BJ,SAASK,cAAc,aAMpD,EAAS,EACTC,GAAS,EAePC,EAAW,WAChBZ,EAAYa,sBAAsBD,GAElCR,EAAc,IApBC,GAqBfH,EAAMa,KAAKb,OACXE,EAAUF,GAAOC,GAAQ,IAEXE,IACE,IAAX,GACHlB,YAAW,WACV,EAAIhC,IAAM,EAEV,EAAS,CACV,GAAG,KACJ,GAAU,EACVgD,EAAOD,EAAOE,EAAUC,EAExBrJ,EAAIgK,UAAU,EAAG,EAAG/J,EAAMuD,MAAOvD,EAAMmD,QAClCwG,EAIJ,EAAOZ,MAAQ,GAHf,EAAUiB,OACV,EAAOjB,MAAQ,EAAWZ,OAAO,EAAUlC,cAAc8C,OAI1D,EAAUxG,OAEV,EAAIA,OAEA,EAAI/B,eAAeC,MAAQ,EAAIwB,oBAAsB,GAAG,EAAUH,iBAMnD,IAAf,EAAIuD,QAAgB,EAAU4E,iBA1C/BjB,GAAWkB,qBAAqBlB,GACpCA,EAAY,KACZmB,IACAV,EAASW,MAAMC,QAAU,QACzBZ,EAASa,UAAY,cAwCtB,EAMMH,EAAW,kB,OAAA,E,OAAA,E,EAAA,W,0mCAShB,OARAvI,OAAO2I,OAAO,GAEd,EAAM,IAAI,IAAIxK,EAAKC,EA9DJ,IA+Df,EAAS,IAAI,IAAOD,EAAKC,EAAO,GAChC,EAAa,IAAI,IAAWD,EAAKC,EAAO,EAAQ,GAChD,EAAY,IAAI,IAAUD,EAAKC,EAAO,EAAK,EAAY,GAGvD,IAFA,EAAY,IAAI,IAAUD,EAAKC,EAAO,EAAQ,EAAK,EAAY,EAAW,IAE1DW,S,OAChB,OADA,SACA,GAAM,EAAOA,S,OACb,OADA,SACA,GAAM,EAAUA,S,OAChB,OADA,SACA,GAAM,EAAIA,S,cAAV,SAGA8I,EAASW,MAAMC,QAAU,Q,qBAfT,K,+QAmBjBF,IAEAd,SAASmB,iBAAiB,WAAW,SAAAC,GACpC,OAAQA,EAAEC,MACT,IAAK,UACA1B,IACCW,EACHA,GAAS,EAEJ,EAAOgB,cAAa,EAAOA,aAAc,IAGhD,MACD,IAAK,YACJ,EAAOC,OAGV,IAEAvB,SAASmB,iBAAiB,SAAS,SAAAC,GAClC,OAAQA,EAAEC,MACT,IAAK,SAEHf,GADGA,EAKL,IAAK,UACJ,EAAOkB,OACP,MACD,IAAK,YACJ,EAAOC,QACP,MACD,IAAK,aACJ,EAAU3I,aAGb,IAEAsH,EAASsB,QAAU,WA7DlBnB,IA+DAH,EAASW,MAAMC,QAAU,MAC1B,C,yCCjIA,WAsBC,WACCtK,EACAC,EACAG,EACAF,EACAC,EACA8K,EACAC,GAEA7K,KAAKL,IAAMA,EACXK,KAAKJ,MAAQA,EACbI,KAAKD,OAASA,EACdC,KAAKH,IAAMA,EACXG,KAAKF,WAAaA,EAClBE,KAAK4K,UAAYA,EACjB5K,KAAK6K,WAAaA,EAClB7K,KAAK6F,aAAe,EACpB7F,KAAK8K,aAAe,CACnB,CACCC,MAAO,EACPvH,EAAG,EACHwH,MAAO,IAGThL,KAAKiL,YAAc,EACnBjL,KAAKkL,aAAelL,KAAKJ,MAAMuD,MAC/BnD,KAAKyI,aAAe,EACpBzI,KAAKmL,cAAgB,EACrBnL,KAAKoL,UAAW,EAChBpL,KAAKqL,gBAAkB,GACvBrL,KAAKC,WAAa,CACjB,yBACA,yBAEA,yBACA,yBAEA,0BACA,yBAEA,sBACA,sBACA,sBACA,2BAEDD,KAAKE,OAAS,CAAC,EACfF,KAAKsL,OAAS,GACdtL,KAAKuL,OAAS,GACdvL,KAAK6J,eAAgB,CACtB,CA4TD,OA1Tc,YAAAtJ,MAAb,W,6pCAiB6B,OAhBtBC,EAAgB,WACrB,IAAMC,EAAW,EAAKR,WAAWS,KAAI,SAACC,GACrC,OAAO,IAAIC,SAAQ,SAACC,EAASC,G,MACtBT,EAA4B,QAArB,EAAAM,EAAKI,MAAM,KAAKC,aAAK,eAAED,MAAM,KAAK,GACzCE,EAAQ,IAAIC,MAElBD,EAAME,IAAMR,EACZM,EAAMG,OAAS,WACdP,EAAQ,CAACR,EAAMY,GAChB,EACAA,EAAMI,QAAU,WAAM,OAAAP,EAAO,gCAAyBH,GAAhC,CACvB,GACD,IACA,OAAOC,QAAQU,IAAIb,EACpB,EAE4B,GAAMD,K,cAA5Be,EAAsB,SAC5BvB,KAAKE,OAASsB,OAAOC,YAAYF,G,ySAG1B,YAAAiK,aAAR,WACC,IAAMC,EAAgCzL,KAAK8K,aAAa9K,KAAK8K,aAAapI,OAAS,GAC7EgJ,EAAwB1L,KAAK6K,WAAW9C,OAAO/H,KAAK6F,cAAcmC,UAClE2D,EAAyBD,EAASD,EAAgBV,OAGxD,GAAIU,EAAgBV,QAAUW,EAAShJ,OAAS,EAC/C,OAAK1C,KAAK6K,WAAW9C,OAAO/H,KAAK6F,aAAe,IAIhD7F,KAAK6F,cAAgB,EAErB7F,KAAK8K,aAAa1G,KAAK,CACtB2G,MAAO,EACPvH,EAAGiI,EAAgBjI,EAAImI,EAAY1D,IAAM0D,EAAYzD,UACrD8C,MAAOhL,KAAK6F,oBAGT7F,KAAK8K,aAAa,GAAGtH,EAAIkI,EAAS1L,KAAK8K,aAAa,GAAGC,OAAO9C,IAAM,GAAGjI,KAAK8K,aAAa1H,eAX5FpD,KAAK6J,eAAgB,GAgBO,IAA1B4B,EAAgBV,QACnB/K,KAAKH,IAAIgG,aAAe7F,KAAK6F,aAC7B7F,KAAKH,IAAIgI,2BAGV7H,KAAK8K,aAAa1G,KAAK,CACtB2G,MAAOU,EAAgBV,MAAQ,EAC/BvH,EAAGiI,EAAgBjI,EAAImI,EAAY1D,IAAM0D,EAAYzD,UACrD8C,MAAOhL,KAAK6F,eAGT7F,KAAK8K,aAAa,GAAGtH,EAAIkI,EAAS1L,KAAK8K,aAAa,GAAGC,OAAO9C,IAAM,GAAGjI,KAAK8K,aAAa1H,OAC9F,EAEO,YAAAwG,KAAP,WACC,IAAI5J,KAAK6J,cAAT,CAEA,IAAMmB,EAAgBhL,KAAK6K,WAAW9C,OAAO/H,KAAK6F,cAC5C+F,EAAqBZ,EAAMhD,UAAUhI,KAAK8K,aAAa9K,KAAK8K,aAAapI,OAAS,GAAGqI,OAEzE/K,KAAK8K,aAAa9K,KAAK8K,aAAapI,OAAS,GAAGc,EAElDoI,EAAQ3D,KAAOjI,KAAKJ,MAAMuD,OAAOnD,KAAKwL,eAEtD,IAAK,IAAI/I,EAAI,EAAGA,EAAIzC,KAAK8K,aAAapI,OAAQD,IAAKzC,KAAK8K,aAAarI,GAAGe,GAAKwH,EAAMrC,MACnF3I,KAAKiL,aAAeD,EAAMrC,MAAQ,EAC9B3I,KAAKuL,SAAQvL,KAAKkL,cAAgBF,EAAMrC,MAAQ,EAXtB,CAY/B,EAEQ,YAAAkD,iBAAR,SAAyB1D,EAAsB9F,EAAkBC,EAAeC,GAC/E,IAAK,IAAIE,EAAI,EAAGA,GAAI0F,aAAK,EAALA,EAAOzF,QAAQD,IAKlC,IAJA,IAAME,EAA2B3C,KAAKE,OAAOiI,EAAM1F,GAAGpC,MAChDyL,EAAa3D,EAAM1F,GAAG2F,kBAGnB2D,EAAI,EAAGA,GAAID,aAAU,EAAVA,EAAYpJ,QAAQqJ,IACvC/L,KAAKL,IAAI0D,UACRV,EACAL,EAAQC,EAAUuJ,EAAWC,GAC7B1J,EAAW,GACXrC,KAAKE,OAAOiI,EAAM1F,GAAGpC,MAAM8C,OAC1BnD,KAAKE,OAAOiI,EAAM1F,GAAGpC,MAAM0C,OAIhC,EAEQ,YAAAiJ,mBAAR,SACC3D,EACAhG,EACAC,EACAC,EACAC,GAEA,IAAK,IAAIC,EAAI,EAAGA,GAAI4F,aAAS,EAATA,EAAW3F,QAAQD,IAKtC,IAJA,IAAME,EAA2B3C,KAAKE,OAAOmI,EAAU5F,GAAGpC,MACpD4L,EAAgB5D,EAAU5F,GAAG2F,kBAG1B2D,EAAI,EAAGA,GAAIE,aAAa,EAAbA,EAAevJ,QAAQqJ,IAC1C/L,KAAKL,IAAI0D,UACRV,EACAL,EAAQC,EAAU0J,EAAcF,GAChC1J,EAAW,EACXrC,KAAKE,OAAOmI,EAAU5F,GAAGpC,MAAM8C,OAC9BnD,KAAKE,OAAOmI,EAAU5F,GAAGpC,MAAM0C,QAGjC/C,KAAKF,WAAWoF,kBAAkB,CACjC3B,GAAIvD,KAAKD,OAAOyD,EAChBC,GAAIzD,KAAKD,OAAO2D,EAChBC,GAAIrB,EAAQC,EAAU0J,EAAcF,GACpCnI,GAAIvB,EAAWrC,KAAKE,OAAOmI,EAAU5F,GAAGpC,MAAM0C,OAAS,GACvDc,GAAI7D,KAAKD,OAAO+D,EAChBC,GAAI/D,KAAKD,OAAOiE,EAChBC,GAAIjE,KAAKE,OAAOmI,EAAU5F,GAAGpC,MAAM8C,MACnCe,GACClE,KAAKE,OAAOmI,EAAU5F,GAAGpC,MAAM0C,QAC/B/C,KAAKJ,MAAMmD,QAAUV,EAAWrC,KAAKE,OAAOmI,EAAU5F,GAAGpC,MAAM0C,OAAS,IACzEoC,WAAkC,cAAtBkD,EAAU5F,GAAGpC,KAAuBL,KAAKqL,gBAAkB,IAAMrL,KAAKqL,gBAClFjG,YAAa,IACbC,UAAW,IACXpC,OAAQ,UAAGoF,EAAU5F,GAAGpC,KAAI,YAAImC,EAAS,YAAIyJ,EAAcF,KAI/D,EAEQ,YAAAG,YAAR,W,MAEMlM,KAAKsL,OAAO5I,SAChB1C,KAAKyI,aAAezI,KAAK6K,WAAW9C,OAAO/H,KAAK6F,cAAc4C,aAC9DzI,KAAKsL,OAAStL,KAAK6K,WAAW9C,OAAO/H,KAAK6F,cAAc2C,eAGrDxI,KAAKuL,OAAO7I,QAAU1C,KAAKkL,cAAgB,IAC9ClL,KAAKsL,OAAStL,KAAK6K,WAAW9C,OAAO/H,KAAK6F,cAAc2C,cACxDxI,KAAKuL,OAAS,GACdvL,KAAKiL,YAAcjL,KAAKkL,aACxBlL,KAAKkL,aAAelL,KAAKJ,MAAMuD,MAC/BnD,KAAKyI,aAAezI,KAAKmL,cACzBnL,KAAKmL,cAAgB,GAGtB,IAAMgB,EAAWnM,KAAKE,OAAOF,KAAKsL,SAGhCtL,KAAKiL,YAAckB,EAAShJ,MAAQnD,KAAKJ,MAAMuD,OAC/CnD,KAAK8K,aAAa,GAAGE,QAAUhL,KAAK6F,gBACpC7F,KAAKuL,OAAO7I,SAEb1C,KAAKkL,aAAelL,KAAKJ,MAAMuD,MAC/BnD,KAAKmL,cAAgBnL,KAAK6K,WAAW9C,OAAO/H,KAAK6F,cAAc4C,aAC/DzI,KAAKuL,OAASvL,KAAK6K,WAAW9C,OAAO/H,KAAK6F,cAAc2C,eAGzD,IAAM4D,EAAsB,QAAX,EAAApM,KAAKE,cAAM,eAAGF,KAAKuL,QAepCvL,KAAKL,IAAI0D,UACR8I,GACCnM,KAAKiL,YACNkB,EAASpJ,OACToJ,EAAShJ,OAASnD,KAAKJ,MAAMuD,MAAQgJ,EAAShJ,QAC7CgJ,EAASpJ,QAAU/C,KAAKJ,MAAMmD,OAASoJ,EAASpJ,QACjD,EACA,EACA/C,KAAKJ,MAAMuD,MACXnD,KAAKJ,MAAMmD,QAGRqJ,GAYHpM,KAAKL,IAAI0D,UACR+I,GACCpM,KAAKkL,aACNkB,EAASrJ,OACTqJ,EAASjJ,OAASnD,KAAKJ,MAAMuD,MAAQiJ,EAASjJ,QAC7CiJ,EAASrJ,QAAU/C,KAAKJ,MAAMmD,OAASqJ,EAASrJ,QACjD,EACA,EACA/C,KAAKJ,MAAMuD,MACXnD,KAAKJ,MAAMmD,OAGd,EAEO,YAAAZ,KAAP,WACCnC,KAAKkM,cAGL,IADA,IAAIG,GAAY,EACP5J,EAAI,EAAGA,EAAIzC,KAAK8K,aAAapI,OAAQD,IAAK,CAClD,IAAMuI,EAAgBhL,KAAK6K,WAAW9C,OAAO/H,KAAK8K,aAAarI,GAAGuI,OAC5DsB,EACLtM,KAAKE,OAAO8K,EAAM1C,iBAAiBnF,OAClC6H,EAAMhD,UAAUhI,KAAK8K,aAAarI,GAAGsI,OAAO9C,IAAM+C,EAAMtC,YAEpD6D,EACLvM,KAAK6K,WAAW9C,OAAO/H,KAAK8K,aAAarI,GAAGuI,OAAOhD,UAAUhI,KAAK8K,aAAarI,GAAGsI,QAAU,IAEzFwB,aAAQ,EAARA,EAAUpE,QACbnI,KAAK6L,iBAAiBU,EAASpE,MAAOoE,EAAS7I,EAAG1D,KAAK8K,aAAarI,GAAGe,EAAG+I,EAAStE,MAGhFsE,aAAQ,EAARA,EAAUnK,WACbpC,KAAK4K,UAAUzI,KACdoK,EAASnK,SACTmK,EAAS7I,EACT1D,KAAK8K,aAAarI,GAAGe,EACrB+I,EAAStE,IACTjI,KAAK8K,aAAarI,GAAGsI,OAIb,IAANtI,GAASzC,KAAKD,OAAOoC,OAErB6I,EAAMzC,UACTvI,KAAKL,IAAI0D,UACRrD,KAAKE,OAAO8K,EAAM1C,iBAClB,EACA,EACAgE,EACAtM,KAAKE,OAAO8K,EAAM1C,iBAAiBvF,OACnC/C,KAAK8K,aAAarI,GAAGe,EACrBwH,EAAMhD,UAAUhI,KAAK8K,aAAarI,GAAGsI,OAAOrH,EAC5CsH,EAAMhD,UAAUhI,KAAK8K,aAAarI,GAAGsI,OAAO9C,IAC5C+C,EAAMzC,WAGPvI,KAAKL,IAAI0D,UACRrD,KAAKE,OAAO8K,EAAM1C,iBAClB,EACAtI,KAAKE,OAAO8K,EAAM1C,iBAAiBvF,OACnCuJ,GACC,IACAtM,KAAKE,OAAO8K,EAAM1C,iBAAiBvF,SACjC/C,KAAKJ,MAAMmD,OAASiI,EAAMhD,UAAUhI,KAAK8K,aAAarI,GAAGsI,OAAOrH,GACjE1D,KAAKE,OAAO8K,EAAM1C,iBAAiBvF,QACrC/C,KAAK8K,aAAarI,GAAGe,EACrBwH,EAAMhD,UAAUhI,KAAK8K,aAAarI,GAAGsI,OAAOrH,EAC5CsH,EAAMhD,UAAUhI,KAAK8K,aAAarI,GAAGsI,OAAO9C,IAC5CjI,KAAKJ,MAAMmD,OAASiI,EAAMhD,UAAUhI,KAAK8K,aAAarI,GAAGsI,OAAOrH,IAa9D6I,aAAQ,EAARA,EAAUlE,YACbrI,KAAKgM,mBACJO,EAASlE,UACTkE,EAAS7I,EACT1D,KAAK8K,aAAarI,GAAGe,EACrB+I,EAAStE,IACTjI,KAAK8K,aAAarI,GAAGsI,OAIH/K,KAAKF,WAAWuE,sBAAsB,CACzDd,GAAIvD,KAAKD,OAAOyD,EAChBC,GAAIzD,KAAKD,OAAO2D,EAChBC,GAAI3D,KAAK8K,aAAarI,GAAGe,EACzBI,GAAIoH,EAAMhD,UAAUhI,KAAK8K,aAAarI,GAAGsI,OAAOrH,EAChDG,GAAI7D,KAAKD,OAAO+D,EAChBC,GAAI/D,KAAKD,OAAOiE,EAChBC,GAAI+G,EAAMhD,UAAUhI,KAAK8K,aAAarI,GAAGsI,OAAO9C,IAChD/D,GAAI8G,EAAMzC,WAAavI,KAAKJ,MAAMmD,OAASiI,EAAMhD,UAAUhI,KAAK8K,aAAarI,GAAGsI,OAAOrH,EACvFS,OAAQnE,KAAKqL,gBACbpI,OAAQ,UAAGjD,KAAK6F,aAAY,YAAI7F,KAAK8K,aAAarI,GAAGsI,WAGrCsB,GAAY,E,CAQ1BA,IAAWrM,KAAKD,OAAO2E,SAAU,EACtC,EACD,EAnYA,E,yCCHA,WA6BC,WAAY/E,EAAcC,EAA0BC,GACnDG,KAAKL,IAAMA,EACXK,KAAKJ,MAAQA,EACbI,KAAKwM,YAAc,IACnBxM,KAAKwD,EAAI,IACTxD,KAAK0D,EAAI,IACT1D,KAAK8D,EAAI,IACT9D,KAAKgE,EAAIhE,KAAK8D,EAAI9D,KAAKwM,YACvBxM,KAAK0E,SAAU,EACf1E,KAAKyM,aAAe,GACpBzM,KAAK0M,kBAAoB,GACzB1M,KAAK2M,aAAe3M,KAAK0M,kBACzB1M,KAAK2E,UAAY,EACjB3E,KAAK4M,KAAO,GACZ5M,KAAK6M,SAAW,EAChB7M,KAAK8M,cAAgB,EACrB9M,KAAK+M,WAAY,EACjB/M,KAAKuK,aAAc,EACnBvK,KAAKgN,SAAW,EAChBhN,KAAKiN,iBAAmB,CAAEzJ,EAAG,EAAGE,EAAG,GACnC1D,KAAK2I,MAAQ,EACb3I,KAAKH,IAAMA,EACXG,KAAKC,WAAa,CACjB,sBACA,4BACA,6BACA,mCACA,sBACA,8BAEDD,KAAKE,OAAS,CAAC,EACfF,KAAKkN,gBAAiB,EACtBlN,KAAKyF,cAAgB,GACrBzF,KAAKmN,WAAY,EACjBnN,KAAK4B,iBAAkB,CACxB,CA8MD,OA5Mc,YAAArB,MAAb,W,6pCAiB6B,OAhBtBC,EAAgB,WACrB,IAAMC,EAAW,EAAKR,WAAWS,KAAI,SAACC,GACrC,OAAO,IAAIC,SAAQ,SAACC,EAASC,G,MACtBT,EAA4B,QAArB,EAAAM,EAAKI,MAAM,KAAKC,aAAK,eAAED,MAAM,KAAK,GACzCE,EAAQ,IAAIC,MAElBD,EAAME,IAAMR,EACZM,EAAMG,OAAS,WACdP,EAAQ,CAACR,EAAMY,GAChB,EACAA,EAAMI,QAAU,WAAM,OAAAP,EAAO,gCAAyBH,GAAhC,CACvB,GACD,IACA,OAAOC,QAAQU,IAAIb,EACpB,EAE4B,GAAMD,K,cAA5Be,EAAsB,SAC5BvB,KAAKE,OAASsB,OAAOC,YAAYF,GACjCvB,KAAK8D,EAAI9D,KAAKE,OAAOkN,MAAMjK,MAC3BnD,KAAKgE,EAAIhE,KAAKE,OAAOkN,MAAMrK,O,ySAGrB,YAAAwC,oBAAP,SAA2BtC,GAA3B,WACKA,IAAWjD,KAAKyF,gBACpBzF,KAAKyF,cAAgBxC,EACrBjD,KAAKkN,gBAAiB,EAGtBpF,YAAW,WACV,EAAKoF,gBAAiB,EACtBpF,YAAW,WACV,EAAKoF,gBAAiB,EACtBpF,YAAW,WACV,EAAKoF,gBAAiB,EACtBpF,YAAW,WACV,EAAKoF,gBAAiB,EACtBpF,YAAW,WACV,EAAKoF,gBAAiB,CACvB,GAZkB,GAanB,GAbmB,GAcpB,GAdoB,GAerB,GAfqB,GAgBtB,GAhBsB,IAiBvB,EAEO,YAAA1C,KAAP,WACKxK,KAAKmN,YACTnN,KAAKmN,WAAY,EACjBnN,KAAK8D,EAAI9D,KAAKE,OAAOmN,YAAYlK,MACjCnD,KAAKgE,EAAIhE,KAAKE,OAAOmN,YAAYtK,OACjC/C,KAAK0D,GAAK1D,KAAKE,OAAOkN,MAAMrK,OAAS/C,KAAKE,OAAOmN,YAAYtK,OAC9D,EAEO,YAAA2H,MAAP,WACM1K,KAAKmN,YACVnN,KAAKmN,WAAY,EACjBnN,KAAK8D,EAAI9D,KAAKE,OAAOkN,MAAMjK,MAC3BnD,KAAKgE,EAAIhE,KAAKE,OAAOkN,MAAMrK,OAC3B/C,KAAK0D,GAAK1D,KAAKE,OAAOkN,MAAMrK,OAAS/C,KAAKE,OAAOmN,YAAYtK,OAC9D,EAEO,YAAA+B,KAAP,SAAYpB,GACP1D,KAAK6M,SAAW,IACpB7M,KAAK0E,SAAU,EACf1E,KAAK+M,WAAY,EACjB/M,KAAK8M,cAAgB,EACrB9M,KAAK6M,SAAW,EAChB7M,KAAK2E,UAAY,EACjB3E,KAAK0D,EAAIA,EAAI1D,KAAKgE,EACbhE,KAAKuK,cAAavK,KAAK2M,aAAe3M,KAAK0M,mBACjD,EAEO,YAAAjC,KAAP,WACCzK,KAAKuK,aAAc,EACfvK,KAAK+M,WAAa/M,KAAK0E,SAAW1E,KAAK2E,UAAY,IACvD3E,KAAK8M,cAAgB9M,KAAK2M,aAC1B3M,KAAK+M,WAAY,EAEjB/M,KAAK0E,SAAU,EACf1E,KAAK2E,UAAY3E,KAAK2M,aACtB3M,KAAK2M,aAAe3M,KAAK0M,kBAC1B,EAEQ,YAAAY,SAAR,WACKtN,KAAK2M,aAAe3M,KAAKyM,cAC5BzM,KAAK2M,cAAgB,GACrB3M,KAAKH,IAAIqH,eACR,GAAKlH,KAAKyM,aAAezM,KAAK2M,eAAiB3M,KAAKyM,aAAezM,KAAK0M,mBACxE1M,KAAKwD,EACLxD,KAAK0D,IAGN1D,KAAKH,IAAIqH,eAAe,EAAGlH,KAAKwD,EAAGxD,KAAK0D,EAE1C,EAEQ,YAAA6J,UAAR,WACC,IAAIC,EAGGA,EAFFxN,KAAKmN,UAEQnN,KAAKkN,eAAiBlN,KAAKE,OAAOuN,mBAAqBzN,KAAKE,OAAOmN,YADzErN,KAAKkN,eAAiBlN,KAAKE,OAAOwN,aAAe1N,KAAKE,OAAOkN,MAGzEpN,KAAKL,IAAIgO,OACT3N,KAAKL,IAAIiO,UAAU5N,KAAKiN,iBAAiBzJ,EAAGxD,KAAKiN,iBAAiBvJ,GAClE1D,KAAKL,IAAIkO,OAAQ7N,KAAK6M,SAAWjI,KAAK4B,GAAM,KAC5CxG,KAAKL,IAAI0D,UACRmK,GACCxN,KAAKE,OAAO4N,MAAM3K,MAAQ,GAC1BnD,KAAKgE,EAAIhE,KAAKE,OAAO4N,MAAM/K,OAAS,EACrC/C,KAAK8D,EACL9D,KAAKgE,GAENhE,KAAKL,IAAIoO,SACV,EAEQ,YAAAC,WAAR,WACC,IAAMC,EAAYjO,KAAKH,IAAIoF,QAAU,GAAK,EAAIjF,KAAKH,IAAIoF,OAAS,IAAMjF,KAAKH,IAAIoF,QAAU,GAAK,EAAI,EAElGjF,KAAKL,IAAIgO,OACT3N,KAAKL,IAAIiO,UAAU5N,KAAKiN,iBAAiBzJ,EAAIyK,EAAWjO,KAAKiN,iBAAiBvJ,GAC9E1D,KAAKL,IAAIkO,OAAQ7N,KAAK6M,SAAWjI,KAAK4B,GAAM,KAC5CxG,KAAKL,IAAIkO,OAAQ7N,KAAKgN,SAAWpI,KAAK4B,GAAM,KAC5CxG,KAAKL,IAAI0D,UACRrD,KAAKkN,eAAiBlN,KAAKE,OAAOgO,aAAelO,KAAKE,OAAO4N,OAC5D9N,KAAKE,OAAO4N,MAAM3K,MAAQ,EAAI8K,GAC9BjO,KAAKE,OAAO4N,MAAM/K,OAAS,EAC5B/C,KAAKE,OAAO4N,MAAM3K,MAAQ,GAC1BnD,KAAKE,OAAO4N,MAAM/K,OAAS,IAE5B/C,KAAKL,IAAIoO,UAET/N,KAAKL,IAAIgO,OACT3N,KAAKL,IAAIiO,UAAU5N,KAAKiN,iBAAiBzJ,EAAGxD,KAAKiN,iBAAiBvJ,EAAIuK,GACtEjO,KAAKL,IAAIkO,OAAQ7N,KAAK6M,SAAWjI,KAAK4B,GAAM,KAC5CxG,KAAKL,IAAIiO,WAAW5N,KAAKiN,iBAAiBzJ,GAAIxD,KAAKiN,iBAAiBvJ,GACpE1D,KAAKL,IAAIiO,UAAU5N,KAAKwD,EAAIxD,KAAK8D,EAAI9D,KAAKE,OAAO4N,MAAM3K,MAAQ,EAAGnD,KAAKiN,iBAAiBvJ,GACxF1D,KAAKL,IAAIkO,OAAQ7N,KAAKgN,SAAWpI,KAAK4B,GAAM,KAC5CxG,KAAKL,IAAIiO,YAAY5N,KAAKwD,EAAIxD,KAAK8D,EAAI9D,KAAKE,OAAO4N,MAAM3K,MAAQ,IAAKnD,KAAKiN,iBAAiBvJ,GAC5F1D,KAAKL,IAAIiO,UAAU5N,KAAKiN,iBAAiBzJ,EAAGxD,KAAKiN,iBAAiBvJ,GAElE1D,KAAKL,IAAI0D,UACRrD,KAAKkN,eAAiBlN,KAAKE,OAAOgO,aAAelO,KAAKE,OAAO4N,QAC3D9N,KAAKiN,iBAAiBzJ,EAAIxD,KAAKwD,GAAKxD,KAAK8D,EAAI9D,KAAKE,OAAO4N,MAAM3K,OAChEnD,KAAKE,OAAO4N,MAAM/K,OAAS,EAAIkL,EAChCjO,KAAKE,OAAO4N,MAAM3K,MAAQ,GAC1BnD,KAAKE,OAAO4N,MAAM/K,OAAS,IAE5B/C,KAAKL,IAAIoO,SACV,EAEQ,YAAAI,WAAR,WAECnO,KAAKL,IAAI0G,UAAY,2BACrBrG,KAAKL,IAAI+G,YAAc,2BACvB1G,KAAKL,IAAIgH,UAAY,EACrB3G,KAAKL,IAAI2G,YACTtG,KAAKL,IAAI4G,QACRvG,KAAKwD,EAAIxD,KAAK8D,EAAI,EAClB9D,KAAK0D,EAAI1D,KAAKgE,EAAI,EAClBhE,KAAK8D,EAAI,EARM,GASf9D,KAAK8D,EAAI,EATM,GAUf,EAAIc,KAAK4B,GACT,EACA,EAAI5B,KAAK4B,IAEVxG,KAAKL,IAAI8G,OACTzG,KAAKL,IAAIkH,QACV,EAEO,YAAA1E,KAAP,W,OACiB,QAAX,EAAAnC,KAAKE,cAAM,eAAEkN,SAClBpN,KAAKgN,UAAYhN,KAAK2I,MAGlB3I,KAAKuK,aAAavK,KAAKsN,WAE3BtN,KAAK0D,GAAK1D,KAAK2E,UACX3E,KAAK0E,UAAS1E,KAAK2E,WAAa3E,KAAK4M,MAErC5M,KAAK+M,YACR/M,KAAK6M,UAAY7M,KAAK8M,cAAgB,EACtC9M,KAAK8M,eAA6B,EAAZ9M,KAAK4M,KAEvB5M,KAAK6M,UAAY,IACpB7M,KAAK8M,cAAgB,IASnB9M,KAAK4B,iBAAiB5B,KAAKmO,aAE/BnO,KAAKiN,iBAAmB,CACvBzJ,EAAGxD,KAAKwD,EAAIxD,KAAKE,OAAO4N,MAAM3K,MAAQ,EACtCO,EAAG1D,KAAK0D,EAAI1D,KAAKgE,EAAIhE,KAAKE,OAAO4N,MAAM/K,OAAS,GAGjD/C,KAAKgO,aACLhO,KAAKuN,YACN,EACD,EA9QA,E,cCFIa,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CCrBAJ,EAAoBO,EAAI,CAACH,EAASI,KACjC,IAAI,IAAIC,KAAOD,EACXR,EAAoBU,EAAEF,EAAYC,KAAST,EAAoBU,EAAEN,EAASK,IAC5EtN,OAAOwN,eAAeP,EAASK,EAAK,CAAEG,YAAY,EAAMC,IAAKL,EAAWC,IAE1E,ECNDT,EAAoBU,EAAI,CAACI,EAAKC,IAAU5N,OAAO6N,UAAUC,eAAeC,KAAKJ,EAAKC,GCGlFf,EAAoB,KACpBA,EAAoB,IACpBA,EAAoB,KACpBA,EAAoB,IACpBA,EAAoB,KACpBA,EAAoB,KACMA,EAAoB,I","sources":["webpack://bike_game/./src/abilities.ts","webpack://bike_game/./src/collisions.ts","webpack://bike_game/./src/hud.ts","webpack://bike_game/./public/gameObject.ts","webpack://bike_game/./src/index.ts","webpack://bike_game/./src/platforms.ts","webpack://bike_game/./src/player.ts","webpack://bike_game/webpack/bootstrap","webpack://bike_game/webpack/runtime/define property getters","webpack://bike_game/webpack/runtime/hasOwnProperty shorthand","webpack://bike_game/webpack/startup"],"sourcesContent":["import Collisions from './collisions';\r\nimport Hud from './hud';\r\nimport Player from './player';\r\nimport { Context, IPowerUp } from './types';\r\n\r\nexport default class Abilities {\r\n\tprivate ctx: Context;\r\n\tprivate world: HTMLCanvasElement;\r\n\tprivate hud: Hud;\r\n\tprivate collisions: Collisions;\r\n\tprivate player: Player;\r\n\tprivate imagePaths: string[];\r\n\tprivate images: any;\r\n\tprivate collectedPowerUps: string[];\r\n\tpublic currentPowerUp: {\r\n\t\tname: string;\r\n\t\tdurationInSecs: number;\r\n\t};\r\n\r\n\tconstructor(ctx: Context, world: HTMLCanvasElement, hud: Hud, collisions: Collisions, player: Player) {\r\n\t\tthis.ctx = ctx;\r\n\t\tthis.world = world;\r\n\t\tthis.hud = hud;\r\n\t\tthis.collisions = collisions;\r\n\t\tthis.player = player;\r\n\t\tthis.imagePaths = ['../public/healthBoost.png', '../public/invincibility.png'];\r\n\t\tthis.images = {};\r\n\t\tthis.collectedPowerUps = [];\r\n\t\tthis.currentPowerUp = {\r\n\t\t\tname: '',\r\n\t\t\tdurationInSecs: 0,\r\n\t\t};\r\n\t}\r\n\r\n\tpublic async setUp() {\r\n\t\tconst preloadImages = () => {\r\n\t\t\tconst promises = this.imagePaths.map((path: string) => {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tconst name = path.split('/').pop()?.split('.')[0];\r\n\t\t\t\t\tconst image = new Image();\r\n\r\n\t\t\t\t\timage.src = path;\r\n\t\t\t\t\timage.onload = () => {\r\n\t\t\t\t\t\tresolve([name, image]);\r\n\t\t\t\t\t};\r\n\t\t\t\t\timage.onerror = () => reject(`Image failed to load: ${path}`);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn Promise.all(promises);\r\n\t\t};\r\n\r\n\t\tconst imgArraytemp: any[] = await preloadImages();\r\n\t\tthis.images = Object.fromEntries(imgArraytemp);\r\n\t}\r\n\r\n\tpublic finishPowerUp() {\r\n\t\tswitch (this.currentPowerUp.name) {\r\n\t\t\tcase 'invincibility':\r\n\t\t\t\tthis.collisions.ignoreObjectCollision = false;\r\n\t\t\t\tthis.player.shieldActivated = false;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.currentPowerUp = {\r\n\t\t\tname: '',\r\n\t\t\tdurationInSecs: 0,\r\n\t\t};\r\n\t\tthis.hud.currentPowerUp = this.currentPowerUp;\r\n\t\tthis.hud.powerUpPercentUsed = 0;\r\n\t\tthis.hud.usingPowerUp = false;\r\n\t}\r\n\r\n\tpublic usePowerUp() {\r\n\t\tswitch (this.currentPowerUp.name) {\r\n\t\t\tcase 'invincibility':\r\n\t\t\t\tthis.collisions.ignoreObjectCollision = true;\r\n\t\t\t\tthis.hud.usingPowerUp = true;\r\n\t\t\t\tthis.player.shieldActivated = true;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate grabPowerUp(powerUp: string) {\r\n\t\tswitch (powerUp) {\r\n\t\t\tcase 'healthBoost':\r\n\t\t\t\tthis.hud.increaseHealth(15);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'invincibility':\r\n\t\t\t\tif (this.currentPowerUp.name) return;\r\n\t\t\t\tthis.currentPowerUp = {\r\n\t\t\t\t\tname: powerUp,\r\n\t\t\t\t\tdurationInSecs: 5,\r\n\t\t\t\t};\r\n\t\t\t\tthis.hud.currentPowerUp = this.currentPowerUp;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic draw(powerUps: IPowerUp[], platYTop: number, platX: number, platLen: number, platIndex: number) {\r\n\t\tfor (let i = 0; i < powerUps?.length; i++) {\r\n\t\t\tconst imgSrc: HTMLImageElement = this.images[powerUps[i].name];\r\n\r\n\t\t\tif (!imgSrc) continue;\r\n\r\n\t\t\tconst imgX = platX + platLen * powerUps[i].xPercAlongPlat;\r\n\t\t\tconst imgY = platYTop - imgSrc.height + 10 - powerUps[i].distAbovePlat;\r\n\t\t\tconst object = `${powerUps[i].name}_${platIndex}_${powerUps[i].xPercAlongPlat}`;\r\n\r\n\t\t\tif (this.collectedPowerUps.includes(object)) {\r\n\t\t\t\tif (imgX + imgSrc.width < 0) this.collectedPowerUps.shift();\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tthis.ctx.drawImage(imgSrc, imgX, imgY, imgSrc.width, imgSrc.height);\r\n\r\n\t\t\tconst collidedWithPowerUp = this.collisions.powerUpCollision({\r\n\t\t\t\tx1: this.player.x,\r\n\t\t\t\ty1: this.player.y,\r\n\t\t\t\tx2: imgX,\r\n\t\t\t\ty2: imgY,\r\n\t\t\t\tw1: this.player.w,\r\n\t\t\t\th1: this.player.h,\r\n\t\t\t\tw2: this.images[powerUps[i].name].width,\r\n\t\t\t\th2:\r\n\t\t\t\t\tthis.images[powerUps[i].name].height ||\r\n\t\t\t\t\tthis.world.height - (platYTop - this.images[powerUps[i].name].height + 10),\r\n\t\t\t\tmargin: 0,\r\n\t\t\t\tobject: object,\r\n\t\t\t});\r\n\r\n\t\t\tif (collidedWithPowerUp) {\r\n\t\t\t\tthis.collectedPowerUps.push(object);\r\n\t\t\t\tthis.grabPowerUp(powerUps[i].name);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import Hud from './hud';\r\nimport Player from './player';\r\nimport { Context, ICollisionArgs } from './types';\r\n\r\nexport default class Collisions {\r\n\tprivate ctx: Context;\r\n\tprivate world: HTMLCanvasElement;\r\n\tprivate player: Player;\r\n\tprivate hud: Hud;\r\n\tpublic ignoreObjectCollision: boolean;\r\n\r\n\tconstructor(ctx: Context, world: HTMLCanvasElement, player: Player, hud: Hud) {\r\n\t\tthis.ctx = ctx;\r\n\t\tthis.world = world;\r\n\t\tthis.player = player;\r\n\t\tthis.hud = hud;\r\n\t\tthis.ignoreObjectCollision = false;\r\n\t}\r\n\r\n\tpublic checkForPlatCollision({\r\n\t\tx1,\r\n\t\ty1,\r\n\t\tx2,\r\n\t\ty2,\r\n\t\tw1,\r\n\t\th1,\r\n\t\tw2,\r\n\t\th2,\r\n\t\tmargin = 0,\r\n\t\tobject,\r\n\t}: ICollisionArgs): boolean {\r\n\t\tconst playerRightOfPlatLeft = x1 + w1 >= x2 + margin; // Player right side to right of plat left\r\n\t\tconst playerLeftOfPlatRight = x1 <= x2 + w2; // Player left side to left of plat right\r\n\t\tconst playerAbovePlatBot = y1 <= y2 + h2; //Player top above plat bottom\r\n\t\tconst playerBelowPlatTop = y1 + this.player.h > y2 + (this.player.isInAir ? margin : 0); // Player bottom above plat top\r\n\r\n\t\tif (playerRightOfPlatLeft && playerLeftOfPlatRight && playerAbovePlatBot) {\r\n\t\t\t// Land if negative velocity and within 20px of platform\r\n\t\t\tif (this.player.yVelocity <= 0 && Math.abs(y2 - (y1 + h1)) < 16) {\r\n\t\t\t\tthis.player.land(y2);\r\n\t\t\t\treturn true;\r\n\t\t\t} else if (playerBelowPlatTop) {\r\n\t\t\t\tconsole.log('Platform Collision!');\r\n\t\t\t\tthis.hud.health = 0;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.player.y + this.player.h > this.world.height) {\r\n\t\t\tthis.hud.health = 0;\r\n\t\t\tconsole.log('Out Of Bounds Collision!');\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic checkForCollision({\r\n\t\tx1,\r\n\t\ty1,\r\n\t\tx2,\r\n\t\ty2,\r\n\t\tw1,\r\n\t\th1,\r\n\t\tw2,\r\n\t\th2,\r\n\t\tmarginLeft = 0,\r\n\t\tmarginRight = 0,\r\n\t\tmarginBot = 0,\r\n\t\tobject,\r\n\t}: ICollisionArgs) {\r\n\t\tif (this.ignoreObjectCollision) return;\r\n\t\tif (\r\n\t\t\tx1 + w1 >= x2 + marginLeft && // Check player right collision\r\n\t\t\tx1 <= x2 + w2 - marginRight && // Check player left collision\r\n\t\t\ty1 <= y2 + h2 - marginBot && // Check player top collision\r\n\t\t\ty1 + h1 > y2 // Check player bottom collision\r\n\t\t) {\r\n\t\t\tthis.hud.reduceHealth(object, 40);\r\n\t\t\tthis.player.changeToDamagedImgs(object);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic powerUpCollision({ x1, y1, x2, y2, w1, h1, w2, h2, margin = 0, object }: ICollisionArgs): boolean {\r\n\t\tif (\r\n\t\t\tx1 + w1 >= x2 + margin && // Check player right collision\r\n\t\t\tx1 <= x2 + w2 && // Check player left collision\r\n\t\t\ty1 <= y2 + h2 && // Check player top collision\r\n\t\t\ty1 + h1 > y2 // Check player bottom collision\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n","import { Context } from './types';\r\n\r\nexport default class Hud {\r\n\tprivate ctx: Context;\r\n\tprivate world: HTMLCanvasElement;\r\n\tpublic health: number;\r\n\tprivate lastObjectHit: any;\r\n\tpublic drawingLevelText: boolean;\r\n\tprivate levelTextOpacity: number;\r\n\tprivate levelTextOpacityInc: number;\r\n\tpublic currentLevel: number;\r\n\tpublic fps: number;\r\n\tpublic framerate: number;\r\n\tpublic fpsEnabled: boolean;\r\n\tprivate imagePaths: string[];\r\n\tprivate images: any;\r\n\tpublic currentPowerUp: {\r\n\t\tname: string;\r\n\t\tdurationInSecs: number;\r\n\t};\r\n\tpublic usingPowerUp: boolean;\r\n\tpublic powerUpPercentUsed: number;\r\n\r\n\tconstructor(ctx: Context, world: HTMLCanvasElement, framerate: number) {\r\n\t\tthis.ctx = ctx;\r\n\t\tthis.world = world;\r\n\t\tthis.health = 100;\r\n\t\tthis.lastObjectHit = '';\r\n\t\tthis.drawingLevelText = false;\r\n\t\tthis.levelTextOpacity = 0;\r\n\t\tthis.levelTextOpacityInc = 0.02;\r\n\t\tthis.currentLevel = 0;\r\n\t\tthis.fps = 0;\r\n\t\tthis.framerate = framerate;\r\n\t\tthis.fpsEnabled = false;\r\n\t\tthis.imagePaths = ['../public/invincibility.png'];\r\n\t\tthis.images = {};\r\n\t\tthis.currentPowerUp = {\r\n\t\t\tname: '',\r\n\t\t\tdurationInSecs: 0,\r\n\t\t};\r\n\t\tthis.powerUpPercentUsed = 0;\r\n\t\tthis.usingPowerUp = false;\r\n\t}\r\n\r\n\tpublic async setUp() {\r\n\t\tconst preloadImages = () => {\r\n\t\t\tconst promises = this.imagePaths.map((path: string) => {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tconst name = path.split('/').pop()?.split('.')[0];\r\n\t\t\t\t\tconst image = new Image();\r\n\r\n\t\t\t\t\timage.src = path;\r\n\t\t\t\t\timage.onload = () => {\r\n\t\t\t\t\t\tresolve([name, image]);\r\n\t\t\t\t\t};\r\n\t\t\t\t\timage.onerror = () => reject(`Image failed to load: ${path}`);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn Promise.all(promises);\r\n\t\t};\r\n\r\n\t\tconst imgArraytemp: any[] = await preloadImages();\r\n\t\tthis.images = Object.fromEntries(imgArraytemp);\r\n\t}\r\n\r\n\tprivate drawPowerUp() {\r\n\t\tif (!this.currentPowerUp.name) return;\r\n\r\n\t\tconst w = this.images[this.currentPowerUp.name].width;\r\n\t\tconst h = this.images[this.currentPowerUp.name].height;\r\n\t\tconst circleSeparation = 6;\r\n\t\tconst rInner = Math.max(w, h) / 2 + 10;\r\n\t\tconst rOuter = rInner + circleSeparation;\r\n\t\tconst xOffset = -20;\r\n\t\tconst yOffset = 20;\r\n\r\n\t\t// Inner circle\r\n\t\tthis.ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.ellipse(\r\n\t\t\tthis.world.width - rInner + xOffset,\r\n\t\t\trInner + yOffset,\r\n\t\t\trInner,\r\n\t\t\trInner,\r\n\t\t\t2 * Math.PI,\r\n\t\t\t0,\r\n\t\t\t2 * Math.PI\r\n\t\t);\r\n\t\tthis.ctx.fill();\r\n\r\n\t\t// Middle circle Static\r\n\t\tthis.ctx.strokeStyle = 'rgba(40, 40, 40, 1)';\r\n\t\tthis.ctx.lineWidth = circleSeparation + 2;\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.ellipse(\r\n\t\t\tthis.world.width - rOuter + xOffset + circleSeparation,\r\n\t\t\trOuter + yOffset - circleSeparation,\r\n\t\t\trOuter - circleSeparation / 2 + 1,\r\n\t\t\trOuter - circleSeparation / 2 + 1,\r\n\t\t\t2 * Math.PI,\r\n\t\t\t-Math.PI / 2,\r\n\t\t\t(3 * Math.PI) / 2\r\n\t\t);\r\n\t\tthis.ctx.stroke();\r\n\r\n\t\t// Middle circle Dynamic\r\n\t\tthis.ctx.strokeStyle = 'rgba(7, 191, 4, 1)';\r\n\t\tthis.ctx.lineWidth = circleSeparation;\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.ellipse(\r\n\t\t\tthis.world.width - rOuter + xOffset + circleSeparation,\r\n\t\t\trOuter + yOffset - circleSeparation,\r\n\t\t\trOuter - circleSeparation / 2,\r\n\t\t\trOuter - circleSeparation / 2,\r\n\t\t\t2 * Math.PI,\r\n\t\t\t-Math.PI / 2 + 2 * Math.PI * this.powerUpPercentUsed,\r\n\t\t\t(3 * Math.PI) / 2\r\n\t\t);\r\n\t\tthis.ctx.stroke();\r\n\r\n\t\tthis.ctx.drawImage(\r\n\t\t\tthis.images[this.currentPowerUp.name],\r\n\t\t\tthis.world.width - rInner - w / 2 + xOffset,\r\n\t\t\tyOffset + rInner - h / 2,\r\n\t\t\tw,\r\n\t\t\th\r\n\t\t);\r\n\r\n\t\tif (this.usingPowerUp) {\r\n\t\t\tthis.powerUpPercentUsed += 1 / (this.framerate * this.currentPowerUp.durationInSecs);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate drawFps() {\r\n\t\tif (!this.fpsEnabled) return;\r\n\r\n\t\tthis.ctx.font = '20px Arial';\r\n\t\tthis.ctx.fillStyle = 'rgba(0, 255, 0, 1)';\r\n\t\tthis.ctx.textAlign = 'right';\r\n\t\tthis.ctx.fillText(`${this.fps} FPS`, this.world.width - 20, 30);\r\n\t}\r\n\r\n\tpublic drawJumpCharge(percentCharged: number, x: number, y: number) {\r\n\t\tconst w = 8;\r\n\t\tconst h = 60;\r\n\t\tconst xOffset = 0;\r\n\t\tconst yOffset = -20;\r\n\t\tthis.ctx.strokeStyle = 'rgb(40, 40, 40)';\r\n\t\tthis.ctx.lineWidth = 2;\r\n\t\tthis.ctx.fillStyle = 'rgb(7, 191, 4)';\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.roundRect(x + xOffset - 1, y + yOffset - 1, w + 2, h + 2, 8);\r\n\t\tthis.ctx.stroke();\r\n\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.roundRect(x + xOffset, y + yOffset + h, w, -h * percentCharged, 8);\r\n\t\tthis.ctx.fill();\r\n\t}\r\n\r\n\tpublic reduceHealth(object: string, amt: number) {\r\n\t\tif (this.lastObjectHit === object) return;\r\n\t\tif (this.health - amt <= 0) this.health = 0;\r\n\t\telse this.health -= amt;\r\n\r\n\t\tthis.lastObjectHit = object;\r\n\t}\r\n\r\n\tpublic increaseHealth(amt: number) {\r\n\t\tif (this.health + amt >= 100) this.health = 100;\r\n\t\telse this.health += amt;\r\n\t}\r\n\r\n\tprivate drawHealth() {\r\n\t\tconst sectionStartX = 30;\r\n\t\tconst sectionStartY = 11;\r\n\t\tconst sectionW = 160;\r\n\t\tconst sectionH = 12;\r\n\r\n\t\tthis.ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.roundRect(sectionStartX - 2, sectionStartY - 2, sectionW + 4, sectionH + 4, 10);\r\n\t\tthis.ctx.fill();\r\n\r\n\t\tthis.ctx.fillStyle =\r\n\t\t\tthis.health >= 90\r\n\t\t\t\t? 'rgba(7, 191, 4, 1)'\r\n\t\t\t\t: this.health >= 50 && this.health < 90\r\n\t\t\t\t? 'rgba(200, 200, 0, 1)'\r\n\t\t\t\t: 'rgba(230, 0, 0, 1)';\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.roundRect(sectionStartX, sectionStartY, sectionW * (this.health / 100), sectionH, 10);\r\n\t\tthis.ctx.fill();\r\n\t}\r\n\r\n\tprivate drawNextLevelText() {\r\n\t\tconst w = 250;\r\n\t\tconst h = 70;\r\n\t\tconst yOffset = -200;\r\n\r\n\t\tthis.ctx.fillStyle = `rgba(0, 0, 0, ${this.levelTextOpacity >= 0.7 ? 0.7 : this.levelTextOpacity})`;\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.roundRect(this.world.width / 2 - w / 2, this.world.height / 2 - h / 2 + yOffset, w, h, 10);\r\n\t\tthis.ctx.fill();\r\n\r\n\t\tthis.ctx.font = '40px Arial';\r\n\t\tthis.ctx.fillStyle = `rgba(255, 255, 255, ${this.levelTextOpacity})`;\r\n\t\tthis.ctx.textAlign = 'center';\r\n\t\tthis.ctx.textBaseline = 'middle';\r\n\t\tthis.ctx.fillText(\r\n\t\t\t`Level ${this.currentLevel + 1}`,\r\n\t\t\tthis.world.width / 2,\r\n\t\t\tthis.world.height / 2 + yOffset\r\n\t\t);\r\n\r\n\t\tthis.levelTextOpacity += this.levelTextOpacityInc;\r\n\t}\r\n\r\n\tpublic beginLevelTextAnimation() {\r\n\t\tthis.drawingLevelText = true;\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.levelTextOpacityInc *= -1;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.drawingLevelText = false;\r\n\t\t\t\tthis.levelTextOpacityInc *= -1;\r\n\t\t\t}, 1500);\r\n\t\t}, 1500);\r\n\t}\r\n\r\n\tpublic draw() {\r\n\t\tthis.drawHealth();\r\n\t\tthis.drawFps();\r\n\t\tthis.drawPowerUp();\r\n\r\n\t\tif (this.drawingLevelText) this.drawNextLevelText();\r\n\t}\r\n}\r\n","import { IGameObject, ILevel } from '../src/types';\r\n\r\nconst levelOne: ILevel = {\r\n\tplatforms: [\r\n\t\t{\r\n\t\t\ty: 600,\r\n\t\t\tlen: 3000,\r\n\t\t\tgapToNext: 0,\r\n\t\t\tdecor: [\r\n\t\t\t\t{ name: 'startSign', xLocsOnPlatByPerc: [0.6] },\r\n\t\t\t\t{ name: 'treeBack', xLocsOnPlatByPerc: [0.6] },\r\n\t\t\t],\r\n\t\t\tobsticles: [{ name: 'treeFront', xLocsOnPlatByPerc: [0.6] }],\r\n\t\t},\r\n\t\t{\r\n\t\t\ty: 600,\r\n\t\t\tlen: 2000,\r\n\t\t\tgapToNext: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\ty: 700,\r\n\t\t\tlen: 1000,\r\n\t\t\tgapToNext: 0,\r\n\t\t},\r\n\t\t{ y: 600, len: 800, gapToNext: 0 },\r\n\t\t{ y: 500, len: 2000, gapToNext: 0, obsticles: [{ name: 'rock2', xLocsOnPlatByPerc: [0.4] }] },\r\n\t\t{ y: 700, len: 1200, gapToNext: 0 },\r\n\t\t{ y: 450, len: 1000, gapToNext: 0, obsticles: [{ name: 'rock3', xLocsOnPlatByPerc: [0.8] }] },\r\n\t\t{ y: 650, len: 1000, gapToNext: 0 },\r\n\t\t{ y: 625, len: 600, gapToNext: 0 },\r\n\t\t{\r\n\t\t\ty: 600,\r\n\t\t\tlen: 800,\r\n\t\t\tgapToNext: 0,\r\n\t\t\tpowerUps: [{ name: 'invincibility', xPercAlongPlat: 0.8, distAbovePlat: 300 }],\r\n\t\t},\r\n\t\t{ y: 550, len: 1000, gapToNext: 0, obsticles: [{ name: 'rock3', xLocsOnPlatByPerc: [0.1] }] },\r\n\t\t{ y: 410, len: 1000, gapToNext: 0 },\r\n\t\t{ y: 700, len: 1000, gapToNext: 0, obsticles: [{ name: 'rock1', xLocsOnPlatByPerc: [0.6] }] },\r\n\t\t{ y: 600, len: 800, gapToNext: 0 },\r\n\t\t{ y: 700, len: 1200, gapToNext: 0 },\r\n\t\t{ y: 450, len: 1000, gapToNext: 0, obsticles: [{ name: 'rock1', xLocsOnPlatByPerc: [0.8] }] },\r\n\t\t{\r\n\t\t\ty: 600,\r\n\t\t\tlen: 2000,\r\n\t\t\tgapToNext: 0,\r\n\t\t\tpowerUps: [{ name: 'healthBoost', xPercAlongPlat: 0.1, distAbovePlat: 300 }],\r\n\t\t},\r\n\t],\r\n\tplatformTexture: 'dirtPlat',\r\n\tplatformH: null,\r\n\tbackgroundImg: 'bgLevel1',\r\n\tbgImgYOffset: 0,\r\n\tmaxPlatLen: 4000,\r\n\tspeed: 14,\r\n};\r\n\r\nconst levelTwo: ILevel = {\r\n\tplatforms: [\r\n\t\t{\r\n\t\t\ty: 600,\r\n\t\t\tlen: 3000,\r\n\t\t\tgapToNext: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\ty: 600,\r\n\t\t\tlen: 2000,\r\n\t\t\tgapToNext: 200,\r\n\t\t},\r\n\t\t{ y: 700, len: 1000, gapToNext: 0, obsticles: [{ name: 'rock1', xLocsOnPlatByPerc: [0.1] }] },\r\n\t\t{\r\n\t\t\ty: 600,\r\n\t\t\tlen: 800,\r\n\t\t\tgapToNext: 0,\r\n\t\t\tpowerUps: [{ name: 'invincibility', xPercAlongPlat: 0.3, distAbovePlat: 200 }],\r\n\t\t},\r\n\t\t{\r\n\t\t\ty: 500,\r\n\t\t\tlen: 2000,\r\n\t\t\tgapToNext: 0,\r\n\t\t\tobsticles: [{ name: 'rock2', xLocsOnPlatByPerc: [0.4] }],\r\n\t\t},\r\n\t\t{ y: 700, len: 1200, gapToNext: 0 },\r\n\t\t{ y: 450, len: 1000, gapToNext: 0, obsticles: [{ name: 'rock3', xLocsOnPlatByPerc: [0.8] }] },\r\n\t\t{ y: 650, len: 1000, gapToNext: 0 },\r\n\t\t{ y: 625, len: 600, gapToNext: 0 },\r\n\t\t{\r\n\t\t\ty: 600,\r\n\t\t\tlen: 800,\r\n\t\t\tgapToNext: 50,\r\n\t\t\tpowerUps: [{ name: 'healthBoost', xPercAlongPlat: 0.2, distAbovePlat: 300 }],\r\n\t\t},\r\n\t\t{\r\n\t\t\ty: 700,\r\n\t\t\tlen: 2000,\r\n\t\t\tgapToNext: 0,\r\n\t\t},\r\n\t\t{ y: 550, len: 700, gapToNext: 0, obsticles: [{ name: 'rock3', xLocsOnPlatByPerc: [0.1] }] },\r\n\t\t{ y: 410, len: 1000, gapToNext: 300 },\r\n\t\t{ y: 700, len: 1000, gapToNext: 0, obsticles: [{ name: 'rock1', xLocsOnPlatByPerc: [0.6] }] },\r\n\t\t{ y: 600, len: 800, gapToNext: 0 },\r\n\t\t{ y: 550, len: 1500, gapToNext: 0, obsticles: [{ name: 'rock3', xLocsOnPlatByPerc: [0.4] }] },\r\n\t\t{ y: 700, len: 1200, gapToNext: 100 },\r\n\t\t{ y: 450, len: 1000, gapToNext: 0, obsticles: [{ name: 'rock1', xLocsOnPlatByPerc: [0.8] }] },\r\n\t\t{ y: 650, len: 1000, gapToNext: 0 },\r\n\t\t{ y: 625, len: 600, gapToNext: 0 },\r\n\t],\r\n\tplatformTexture: 'woodPlat',\r\n\tplatformH: 16,\r\n\tbackgroundImg: 'bgLevel2',\r\n\tbgImgYOffset: 0,\r\n\tmaxPlatLen: 4000,\r\n\tspeed: 16,\r\n};\r\n\r\nconst gameObject: IGameObject = {\r\n\tlevels: [levelOne, levelTwo],\r\n};\r\n\r\nexport default gameObject;\r\n","import gameObject from '../public/gameObject';\r\nimport Abilities from './abilities';\r\nimport Collisions from './collisions';\r\nimport Hud from './hud';\r\nimport Platforms from './platforms';\r\nimport Player from './player';\r\n\r\nconst world = <HTMLCanvasElement>document.getElementById('world');\r\nconst ctx = <CanvasRenderingContext2D>world.getContext('2d', { alpha: false });\r\n\r\nconst startBtn = <HTMLDivElement>document.querySelector('.startBtn');\r\n\r\n// For game loop\r\nlet requestId: number | null, now: number, then: number, elapsed: number, fpsInterval: number;\r\n\r\nlet frameRate = 60;\r\nlet frames = 0;\r\nlet paused = false;\r\nlet levelsStarted = -1;\r\n\r\n// Classes\r\nlet platforms: Platforms, player: Player, hud: Hud, collisions: Collisions, abilities: Abilities;\r\n\r\nconst endGame = () => {\r\n\tif (requestId) cancelAnimationFrame(requestId);\r\n\trequestId = null;\r\n\tprepGame();\r\n\tstartBtn.style.display = 'block';\r\n\tstartBtn.innerHTML = 'Play Again';\r\n\tlevelsStarted = -1;\r\n};\r\n\r\nconst gameLoop = () => {\r\n\trequestId = requestAnimationFrame(gameLoop);\r\n\r\n\tfpsInterval = 1000 / frameRate;\r\n\tnow = Date.now();\r\n\telapsed = now - (then || 0);\r\n\r\n\tif (elapsed > fpsInterval) {\r\n\t\tif (frames === 0)\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\thud.fps = frames;\r\n\t\t\t\t// console.log(frames);\r\n\t\t\t\tframes = 0;\r\n\t\t\t}, 1000);\r\n\t\tframes += 1;\r\n\t\tthen = now - (elapsed % fpsInterval);\r\n\r\n\t\tctx.clearRect(0, 0, world.width, world.height);\r\n\t\tif (!paused) {\r\n\t\t\tplatforms.move();\r\n\t\t\tplayer.speed = gameObject.levels[platforms.currentLevel].speed;\r\n\t\t} else {\r\n\t\t\tplayer.speed = 0;\r\n\t\t}\r\n\t\tplatforms.draw();\r\n\t\t// Drawing player in Platforms class right before drawing obsticles\r\n\t\thud.draw();\r\n\r\n\t\tif (hud.currentPowerUp.name && hud.powerUpPercentUsed >= 1) abilities.finishPowerUp();\r\n\r\n\t\t// if (platforms.platsVisible?.[0]?.index === 0 && platforms.currentLevel > levelsStarted) {\r\n\t\t// \tlevelsStarted = platforms.currentLevel;\r\n\t\t// }\r\n\r\n\t\tif (hud.health === 0 || platforms.gameCompleted) endGame();\r\n\t}\r\n};\r\n\r\nconst startGame = () => {\r\n\tgameLoop();\r\n};\r\n\r\nconst prepGame = async () => {\r\n\tObject.freeze(gameObject);\r\n\r\n\thud = new Hud(ctx, world, frameRate);\r\n\tplayer = new Player(ctx, world, hud);\r\n\tcollisions = new Collisions(ctx, world, player, hud);\r\n\tabilities = new Abilities(ctx, world, hud, collisions, player);\r\n\tplatforms = new Platforms(ctx, world, player, hud, collisions, abilities, gameObject);\r\n\r\n\tawait platforms.setUp();\r\n\tawait player.setUp();\r\n\tawait abilities.setUp();\r\n\tawait hud.setUp();\r\n\r\n\t// startGame();\r\n\tstartBtn.style.display = 'block';\r\n\t// startBtn.style.display = 'none';\r\n};\r\n\r\nprepGame();\r\n\r\ndocument.addEventListener('keydown', e => {\r\n\tswitch (e.code) {\r\n\t\tcase 'ArrowUp':\r\n\t\t\tif (requestId) {\r\n\t\t\t\tif (paused) {\r\n\t\t\t\t\tpaused = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!player.loadingJump) player.loadingJump = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'ArrowDown':\r\n\t\t\tplayer.duck();\r\n\t\t\tbreak;\r\n\t}\r\n});\r\n\r\ndocument.addEventListener('keyup', e => {\r\n\tswitch (e.code) {\r\n\t\tcase 'Escape':\r\n\t\t\tif (paused) {\r\n\t\t\t\tpaused = false;\r\n\t\t\t} else {\r\n\t\t\t\tpaused = true;\r\n\t\t\t}\r\n\t\tcase 'ArrowUp':\r\n\t\t\tplayer.jump();\r\n\t\t\tbreak;\r\n\t\tcase 'ArrowDown':\r\n\t\t\tplayer.stand();\r\n\t\t\tbreak;\r\n\t\tcase 'ArrowRight':\r\n\t\t\tabilities.usePowerUp();\r\n\t\t\tbreak;\r\n\t}\r\n});\r\n\r\nstartBtn.onclick = () => {\r\n\tstartGame();\r\n\tstartBtn.style.display = 'none';\r\n};\r\n","import Abilities from './abilities';\r\nimport Collisions from './collisions';\r\nimport Hud from './hud';\r\nimport Player from './player';\r\nimport { Context, IGameObject, ILevel, IPlatObject, IPlatform, IPowerUp, IVisiblePlat } from './types';\r\n\r\nexport default class Platforms {\r\n\tprivate ctx: Context;\r\n\tprivate world: HTMLCanvasElement;\r\n\tprivate player: Player;\r\n\tprivate hud: Hud;\r\n\tprivate collisions: Collisions;\r\n\tprivate abilities: Abilities;\r\n\tprivate gameObject: IGameObject;\r\n\tpublic currentLevel: number;\r\n\tpublic platsVisible: IVisiblePlat[];\r\n\tprivate backgroundX: number;\r\n\tprivate backgroundX2: number;\r\n\tprivate bgImgYOffset: number;\r\n\tprivate bgImgYOffset2: number;\r\n\tpublic gameOver: boolean;\r\n\tprivate collisionMargin: number;\r\n\tprivate imagePaths: string[];\r\n\tprivate images: any;\r\n\tprivate bgImg1: string;\r\n\tprivate bgImg2: string;\r\n\tpublic gameCompleted: boolean;\r\n\r\n\tconstructor(\r\n\t\tctx: Context,\r\n\t\tworld: HTMLCanvasElement,\r\n\t\tplayer: Player,\r\n\t\thud: Hud,\r\n\t\tcollisions: Collisions,\r\n\t\tabilities: Abilities,\r\n\t\tgameObject: any\r\n\t) {\r\n\t\tthis.ctx = ctx;\r\n\t\tthis.world = world;\r\n\t\tthis.player = player;\r\n\t\tthis.hud = hud;\r\n\t\tthis.collisions = collisions;\r\n\t\tthis.abilities = abilities;\r\n\t\tthis.gameObject = gameObject;\r\n\t\tthis.currentLevel = 0;\r\n\t\tthis.platsVisible = [\r\n\t\t\t{\r\n\t\t\t\tindex: 0,\r\n\t\t\t\tx: 0,\r\n\t\t\t\tlevel: 0,\r\n\t\t\t},\r\n\t\t];\r\n\t\tthis.backgroundX = 0;\r\n\t\tthis.backgroundX2 = this.world.width;\r\n\t\tthis.bgImgYOffset = 0;\r\n\t\tthis.bgImgYOffset2 = 0;\r\n\t\tthis.gameOver = false;\r\n\t\tthis.collisionMargin = 26;\r\n\t\tthis.imagePaths = [\r\n\t\t\t'../public/bgLevel1.png',\r\n\t\t\t'../public/bgLevel2.png',\r\n\t\t\t// Platform Textures\r\n\t\t\t'../public/woodPlat.png',\r\n\t\t\t'../public/dirtPlat.png',\r\n\t\t\t// Decor\r\n\t\t\t'../public/startSign.png',\r\n\t\t\t'../public/treeBack.png',\r\n\t\t\t// Obsticles\r\n\t\t\t'../public/rock1.png',\r\n\t\t\t'../public/rock2.png',\r\n\t\t\t'../public/rock3.png',\r\n\t\t\t'../public/treeFront.png',\r\n\t\t];\r\n\t\tthis.images = {};\r\n\t\tthis.bgImg1 = '';\r\n\t\tthis.bgImg2 = '';\r\n\t\tthis.gameCompleted = false;\r\n\t}\r\n\r\n\tpublic async setUp() {\r\n\t\tconst preloadImages = () => {\r\n\t\t\tconst promises = this.imagePaths.map((path: string) => {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tconst name = path.split('/').pop()?.split('.')[0];\r\n\t\t\t\t\tconst image = new Image();\r\n\r\n\t\t\t\t\timage.src = path;\r\n\t\t\t\t\timage.onload = () => {\r\n\t\t\t\t\t\tresolve([name, image]);\r\n\t\t\t\t\t};\r\n\t\t\t\t\timage.onerror = () => reject(`Image failed to load: ${path}`);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn Promise.all(promises);\r\n\t\t};\r\n\r\n\t\tconst imgArraytemp: any[] = await preloadImages();\r\n\t\tthis.images = Object.fromEntries(imgArraytemp);\r\n\t}\r\n\r\n\tprivate nextPlatform() {\r\n\t\tconst lastVisiblePlat: IVisiblePlat = this.platsVisible[this.platsVisible.length - 1];\r\n\t\tconst platsRef: IPlatform[] = this.gameObject.levels[this.currentLevel].platforms;\r\n\t\tconst lastPlatRef: IPlatform = platsRef[lastVisiblePlat.index];\r\n\t\t// const nextPlat: IPlatform = platsRef[lastVisiblePlat.index + 1];\r\n\r\n\t\tif (lastVisiblePlat.index === platsRef.length - 1) {\r\n\t\t\tif (!this.gameObject.levels[this.currentLevel + 1]) {\r\n\t\t\t\tthis.gameCompleted = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.currentLevel += 1;\r\n\r\n\t\t\tthis.platsVisible.push({\r\n\t\t\t\tindex: 0,\r\n\t\t\t\tx: lastVisiblePlat.x + lastPlatRef.len + lastPlatRef.gapToNext,\r\n\t\t\t\tlevel: this.currentLevel,\r\n\t\t\t});\r\n\r\n\t\t\tif (this.platsVisible[0].x + platsRef[this.platsVisible[0].index].len < 0) this.platsVisible.shift();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (lastVisiblePlat.index === 0) {\r\n\t\t\tthis.hud.currentLevel = this.currentLevel;\r\n\t\t\tthis.hud.beginLevelTextAnimation();\r\n\t\t}\r\n\r\n\t\tthis.platsVisible.push({\r\n\t\t\tindex: lastVisiblePlat.index + 1,\r\n\t\t\tx: lastVisiblePlat.x + lastPlatRef.len + lastPlatRef.gapToNext,\r\n\t\t\tlevel: this.currentLevel,\r\n\t\t});\r\n\r\n\t\tif (this.platsVisible[0].x + platsRef[this.platsVisible[0].index].len < 0) this.platsVisible.shift();\r\n\t}\r\n\r\n\tpublic move() {\r\n\t\tif (this.gameCompleted) return;\r\n\r\n\t\tconst level: ILevel = this.gameObject.levels[this.currentLevel];\r\n\t\tconst platRef: IPlatform = level.platforms[this.platsVisible[this.platsVisible.length - 1].index];\r\n\r\n\t\tconst lastPlatX = this.platsVisible[this.platsVisible.length - 1].x;\r\n\r\n\t\tif (lastPlatX + platRef.len <= this.world.width) this.nextPlatform();\r\n\r\n\t\tfor (let i = 0; i < this.platsVisible.length; i++) this.platsVisible[i].x -= level.speed;\r\n\t\tthis.backgroundX -= level.speed / 8;\r\n\t\tif (this.bgImg2) this.backgroundX2 -= level.speed / 8;\r\n\t}\r\n\r\n\tprivate drawDecorForPlat(decor: IPlatObject[], platYTop: number, platX: number, platLen: number) {\r\n\t\tfor (let i = 0; i < decor?.length; i++) {\r\n\t\t\tconst imgSrc: HTMLImageElement = this.images[decor[i].name];\r\n\t\t\tconst decorXVals = decor[i].xLocsOnPlatByPerc;\r\n\r\n\t\t\t// if (decor[i].name === 'treeBack') console.log(this.images[decor[i].name].width);\r\n\t\t\tfor (let j = 0; j < decorXVals?.length; j++) {\r\n\t\t\t\tthis.ctx.drawImage(\r\n\t\t\t\t\timgSrc,\r\n\t\t\t\t\tplatX + platLen * decorXVals[j],\r\n\t\t\t\t\tplatYTop + 10,\r\n\t\t\t\t\tthis.images[decor[i].name].width,\r\n\t\t\t\t\t-this.images[decor[i].name].height\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate drawObsticleOnPlat(\r\n\t\tobsticles: IPlatObject[],\r\n\t\tplatYTop: number,\r\n\t\tplatX: number,\r\n\t\tplatLen: number,\r\n\t\tplatIndex: number\r\n\t) {\r\n\t\tfor (let i = 0; i < obsticles?.length; i++) {\r\n\t\t\tconst imgSrc: HTMLImageElement = this.images[obsticles[i].name];\r\n\t\t\tconst obsticleXVals = obsticles[i].xLocsOnPlatByPerc;\r\n\t\t\t// if (obsticles[i].name === 'treeFront') console.log(this.images[obsticles[i].name].width);\r\n\r\n\t\t\tfor (let j = 0; j < obsticleXVals?.length; j++) {\r\n\t\t\t\tthis.ctx.drawImage(\r\n\t\t\t\t\timgSrc,\r\n\t\t\t\t\tplatX + platLen * obsticleXVals[j],\r\n\t\t\t\t\tplatYTop + 4,\r\n\t\t\t\t\tthis.images[obsticles[i].name].width,\r\n\t\t\t\t\t-this.images[obsticles[i].name].height\r\n\t\t\t\t);\r\n\r\n\t\t\t\tthis.collisions.checkForCollision({\r\n\t\t\t\t\tx1: this.player.x,\r\n\t\t\t\t\ty1: this.player.y,\r\n\t\t\t\t\tx2: platX + platLen * obsticleXVals[j],\r\n\t\t\t\t\ty2: platYTop - this.images[obsticles[i].name].height + 10,\r\n\t\t\t\t\tw1: this.player.w,\r\n\t\t\t\t\th1: this.player.h,\r\n\t\t\t\t\tw2: this.images[obsticles[i].name].width,\r\n\t\t\t\t\th2:\r\n\t\t\t\t\t\tthis.images[obsticles[i].name].height ||\r\n\t\t\t\t\t\tthis.world.height - (platYTop - this.images[obsticles[i].name].height + 10),\r\n\t\t\t\t\tmarginLeft: obsticles[i].name === 'treeFront' ? this.collisionMargin + 150 : this.collisionMargin,\r\n\t\t\t\t\tmarginRight: 180,\r\n\t\t\t\t\tmarginBot: 130,\r\n\t\t\t\t\tobject: `${obsticles[i].name}_${platIndex}_${obsticleXVals[j]}`,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate drawBgImage() {\r\n\t\t// If no bg image 1, assign to it and assign it's y offset\r\n\t\tif (!this.bgImg1.length) {\r\n\t\t\tthis.bgImgYOffset = this.gameObject.levels[this.currentLevel].bgImgYOffset;\r\n\t\t\tthis.bgImg1 = this.gameObject.levels[this.currentLevel].backgroundImg;\r\n\t\t}\r\n\r\n\t\tif (this.bgImg2.length && this.backgroundX2 <= 0) {\r\n\t\t\tthis.bgImg1 = this.gameObject.levels[this.currentLevel].backgroundImg;\r\n\t\t\tthis.bgImg2 = '';\r\n\t\t\tthis.backgroundX = this.backgroundX2;\r\n\t\t\tthis.backgroundX2 = this.world.width;\r\n\t\t\tthis.bgImgYOffset = this.bgImgYOffset2;\r\n\t\t\tthis.bgImgYOffset2 = 0;\r\n\t\t}\r\n\r\n\t\tconst bgImage1 = this.images[this.bgImg1]; // Left Side Background\r\n\r\n\t\tif (\r\n\t\t\t(this.backgroundX + bgImage1.width < this.world.width ||\r\n\t\t\t\tthis.platsVisible[0].level !== this.currentLevel) &&\r\n\t\t\t!this.bgImg2.length\r\n\t\t) {\r\n\t\t\tthis.backgroundX2 = this.world.width;\r\n\t\t\tthis.bgImgYOffset2 = this.gameObject.levels[this.currentLevel].bgImgYOffset;\r\n\t\t\tthis.bgImg2 = this.gameObject.levels[this.currentLevel].backgroundImg;\r\n\t\t}\r\n\r\n\t\tconst bgImage2 = this.images?.[this.bgImg2]; // Right Side Background\r\n\r\n\t\t// this.ctx.drawImage(\r\n\t\t// \tbgImage1,\r\n\t\t// \t0,\r\n\t\t// \tbgImage1.height - bgImage1.height * this.bgImgScaler,\r\n\t\t// \tbgImage1.width * this.bgImgScaler,\r\n\t\t// \tbgImage1.height * this.bgImgScaler,\r\n\t\t// \tthis.backgroundX,\r\n\t\t// \tthis.world.height + this.bgImgYOffset,\r\n\t\t// \tbgImage1.width,\r\n\t\t// \t-bgImage1.height\r\n\t\t// );\r\n\t\t// console.log(this.world.width / bgImage1.width);\r\n\r\n\t\tthis.ctx.drawImage(\r\n\t\t\tbgImage1,\r\n\t\t\t-this.backgroundX,\r\n\t\t\tbgImage1.height,\r\n\t\t\tbgImage1.width * (this.world.width / bgImage1.width),\r\n\t\t\t-bgImage1.height * (this.world.height / bgImage1.height),\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tthis.world.width,\r\n\t\t\tthis.world.height\r\n\t\t);\r\n\r\n\t\tif (bgImage2) {\r\n\t\t\t// this.ctx.drawImage(\r\n\t\t\t// \tbgImage2,\r\n\t\t\t// \t0,\r\n\t\t\t// \tbgImage2.height - bgImage2.height * this.bgImgScaler2,\r\n\t\t\t// \tbgImage2.width * this.bgImgScaler2,\r\n\t\t\t// \tbgImage2.height * this.bgImgScaler2,\r\n\t\t\t// \tthis.backgroundX2,\r\n\t\t\t// \tthis.world.height + this.bgImgYOffset2,\r\n\t\t\t// \tbgImage2.width,\r\n\t\t\t// \t-bgImage2.height\r\n\t\t\t// );\r\n\t\t\tthis.ctx.drawImage(\r\n\t\t\t\tbgImage2,\r\n\t\t\t\t-this.backgroundX2,\r\n\t\t\t\tbgImage2.height,\r\n\t\t\t\tbgImage2.width * (this.world.width / bgImage2.width),\r\n\t\t\t\t-bgImage2.height * (this.world.height / bgImage2.height),\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\tthis.world.width,\r\n\t\t\t\tthis.world.height\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic draw() {\r\n\t\tthis.drawBgImage();\r\n\r\n\t\tlet isFalling = true;\r\n\t\tfor (let i = 0; i < this.platsVisible.length; i++) {\r\n\t\t\tconst level: ILevel = this.gameObject.levels[this.platsVisible[i].level];\r\n\t\t\tconst imgW =\r\n\t\t\t\tthis.images[level.platformTexture].width *\r\n\t\t\t\t(level.platforms[this.platsVisible[i].index].len / level.maxPlatLen);\r\n\r\n\t\t\tconst platform: IPlatform =\r\n\t\t\t\tthis.gameObject.levels[this.platsVisible[i].level].platforms[this.platsVisible[i].index] || [];\r\n\r\n\t\t\tif (platform?.decor) {\r\n\t\t\t\tthis.drawDecorForPlat(platform.decor, platform.y, this.platsVisible[i].x, platform.len);\r\n\t\t\t}\r\n\r\n\t\t\tif (platform?.powerUps) {\r\n\t\t\t\tthis.abilities.draw(\r\n\t\t\t\t\tplatform.powerUps,\r\n\t\t\t\t\tplatform.y,\r\n\t\t\t\t\tthis.platsVisible[i].x,\r\n\t\t\t\t\tplatform.len,\r\n\t\t\t\t\tthis.platsVisible[i].index\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (i === 0) this.player.draw();\r\n\r\n\t\t\tif (level.platformH) {\r\n\t\t\t\tthis.ctx.drawImage(\r\n\t\t\t\t\tthis.images[level.platformTexture],\r\n\t\t\t\t\t0,\r\n\t\t\t\t\t0,\r\n\t\t\t\t\timgW,\r\n\t\t\t\t\tthis.images[level.platformTexture].height,\r\n\t\t\t\t\tthis.platsVisible[i].x,\r\n\t\t\t\t\tlevel.platforms[this.platsVisible[i].index].y,\r\n\t\t\t\t\tlevel.platforms[this.platsVisible[i].index].len,\r\n\t\t\t\t\tlevel.platformH\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tthis.ctx.drawImage(\r\n\t\t\t\t\tthis.images[level.platformTexture],\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tthis.images[level.platformTexture].height,\r\n\t\t\t\t\timgW,\r\n\t\t\t\t\t-2.5 *\r\n\t\t\t\t\t\tthis.images[level.platformTexture].height *\r\n\t\t\t\t\t\t((this.world.height - level.platforms[this.platsVisible[i].index].y) /\r\n\t\t\t\t\t\t\tthis.images[level.platformTexture].height),\r\n\t\t\t\t\tthis.platsVisible[i].x,\r\n\t\t\t\t\tlevel.platforms[this.platsVisible[i].index].y,\r\n\t\t\t\t\tlevel.platforms[this.platsVisible[i].index].len,\r\n\t\t\t\t\tthis.world.height - level.platforms[this.platsVisible[i].index].y\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// this.ctx.strokeStyle = 'black';\r\n\t\t\t\t// this.ctx.rect(\r\n\t\t\t\t// \tplat.x,\r\n\t\t\t\t// \tlevel.platforms[plat.index].y,\r\n\t\t\t\t// \tlevel.platforms[plat.index].len,\r\n\t\t\t\t// \tthis.world.height - level.platforms[plat.index].y\r\n\t\t\t\t// );\r\n\t\t\t\t// this.ctx.stroke();\r\n\t\t\t}\r\n\r\n\t\t\tif (platform?.obsticles) {\r\n\t\t\t\tthis.drawObsticleOnPlat(\r\n\t\t\t\t\tplatform.obsticles,\r\n\t\t\t\t\tplatform.y,\r\n\t\t\t\t\tthis.platsVisible[i].x,\r\n\t\t\t\t\tplatform.len,\r\n\t\t\t\t\tthis.platsVisible[i].index\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tconst isColliding = this.collisions.checkForPlatCollision({\r\n\t\t\t\tx1: this.player.x,\r\n\t\t\t\ty1: this.player.y,\r\n\t\t\t\tx2: this.platsVisible[i].x,\r\n\t\t\t\ty2: level.platforms[this.platsVisible[i].index].y,\r\n\t\t\t\tw1: this.player.w,\r\n\t\t\t\th1: this.player.h,\r\n\t\t\t\tw2: level.platforms[this.platsVisible[i].index].len,\r\n\t\t\t\th2: level.platformH || this.world.height - level.platforms[this.platsVisible[i].index].y,\r\n\t\t\t\tmargin: this.collisionMargin,\r\n\t\t\t\tobject: `${this.currentLevel}_${this.platsVisible[i].index}`,\r\n\t\t\t});\r\n\r\n\t\t\tif (isColliding) isFalling = false;\r\n\r\n\t\t\t// this.ctx.fillStyle = 'rgba(0, 0, 0, 0.3)';\r\n\t\t\t// this.ctx.beginPath();\r\n\t\t\t// this.ctx.rect(this.platforms[i].x, this.platforms[i].y, this.platforms[i].w, this.h);\r\n\t\t\t// this.ctx.fill();\r\n\t\t}\r\n\r\n\t\tif (isFalling) this.player.isInAir = true;\r\n\t}\r\n}\r\n","import Hud from './hud';\r\nimport { Context } from './types';\r\n\r\nexport default class Player {\r\n\tprivate ctx: Context;\r\n\tprivate world: HTMLCanvasElement;\r\n\tprivate hud: Hud;\r\n\tprivate aspectRatio: number;\r\n\tpublic x: number;\r\n\tpublic y: number;\r\n\tpublic w: number;\r\n\tpublic h: number;\r\n\tpublic isInAir: boolean;\r\n\tpublic maxJumpStart: number;\r\n\tpublic jumpVelStartReset: number;\r\n\tpublic jumpVelStart: number;\r\n\tpublic yVelocity: number;\r\n\tpublic yAcc: number;\r\n\tprivate rotation: number;\r\n\tprivate rotationSpeed: number;\r\n\tprivate isJumping: boolean;\r\n\tpublic loadingJump: boolean;\r\n\tprivate wheelRot: number;\r\n\tprivate rotCoordsForJump: { x: number; y: number };\r\n\tpublic speed: number;\r\n\tprivate imagePaths: string[];\r\n\tprivate images: any;\r\n\tprivate isBeingDamaged: boolean;\r\n\tprivate lastObjectHit: string;\r\n\tprivate isDucking: boolean;\r\n\tpublic shieldActivated: boolean;\r\n\r\n\tconstructor(ctx: Context, world: HTMLCanvasElement, hud: Hud) {\r\n\t\tthis.ctx = ctx;\r\n\t\tthis.world = world;\r\n\t\tthis.aspectRatio = 1.1;\r\n\t\tthis.x = 100;\r\n\t\tthis.y = 100;\r\n\t\tthis.w = 150;\r\n\t\tthis.h = this.w / this.aspectRatio;\r\n\t\tthis.isInAir = true;\r\n\t\tthis.maxJumpStart = 20;\r\n\t\tthis.jumpVelStartReset = 10;\r\n\t\tthis.jumpVelStart = this.jumpVelStartReset;\r\n\t\tthis.yVelocity = 0;\r\n\t\tthis.yAcc = 0.8;\r\n\t\tthis.rotation = 0;\r\n\t\tthis.rotationSpeed = 0;\r\n\t\tthis.isJumping = false;\r\n\t\tthis.loadingJump = false;\r\n\t\tthis.wheelRot = 0;\r\n\t\tthis.rotCoordsForJump = { x: 0, y: 0 };\r\n\t\tthis.speed = 0;\r\n\t\tthis.hud = hud;\r\n\t\tthis.imagePaths = [\r\n\t\t\t'../public/frame.png',\r\n\t\t\t'../public/frameDucked.png',\r\n\t\t\t'../public/frameDamaged.png',\r\n\t\t\t'../public/frameDuckedDamaged.png',\r\n\t\t\t'../public/wheel.png',\r\n\t\t\t'../public/wheelDamaged.png',\r\n\t\t];\r\n\t\tthis.images = {};\r\n\t\tthis.isBeingDamaged = false;\r\n\t\tthis.lastObjectHit = '';\r\n\t\tthis.isDucking = false;\r\n\t\tthis.shieldActivated = false;\r\n\t}\r\n\r\n\tpublic async setUp() {\r\n\t\tconst preloadImages = () => {\r\n\t\t\tconst promises = this.imagePaths.map((path: string) => {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tconst name = path.split('/').pop()?.split('.')[0];\r\n\t\t\t\t\tconst image = new Image();\r\n\r\n\t\t\t\t\timage.src = path;\r\n\t\t\t\t\timage.onload = () => {\r\n\t\t\t\t\t\tresolve([name, image]);\r\n\t\t\t\t\t};\r\n\t\t\t\t\timage.onerror = () => reject(`Image failed to load: ${path}`);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn Promise.all(promises);\r\n\t\t};\r\n\r\n\t\tconst imgArraytemp: any[] = await preloadImages();\r\n\t\tthis.images = Object.fromEntries(imgArraytemp);\r\n\t\tthis.w = this.images.frame.width;\r\n\t\tthis.h = this.images.frame.height;\r\n\t}\r\n\r\n\tpublic changeToDamagedImgs(object: string) {\r\n\t\tif (object === this.lastObjectHit) return;\r\n\t\tthis.lastObjectHit = object;\r\n\t\tthis.isBeingDamaged = true;\r\n\t\tconst flashInterval = 50;\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.isBeingDamaged = false;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.isBeingDamaged = true;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.isBeingDamaged = false;\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tthis.isBeingDamaged = true;\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tthis.isBeingDamaged = false;\r\n\t\t\t\t\t\t}, flashInterval);\r\n\t\t\t\t\t}, flashInterval);\r\n\t\t\t\t}, flashInterval);\r\n\t\t\t}, flashInterval);\r\n\t\t}, flashInterval);\r\n\t}\r\n\r\n\tpublic duck() {\r\n\t\tif (this.isDucking) return;\r\n\t\tthis.isDucking = true;\r\n\t\tthis.w = this.images.frameDucked.width;\r\n\t\tthis.h = this.images.frameDucked.height;\r\n\t\tthis.y += this.images.frame.height - this.images.frameDucked.height;\r\n\t}\r\n\r\n\tpublic stand() {\r\n\t\tif (!this.isDucking) return;\r\n\t\tthis.isDucking = false;\r\n\t\tthis.w = this.images.frame.width;\r\n\t\tthis.h = this.images.frame.height;\r\n\t\tthis.y -= this.images.frame.height - this.images.frameDucked.height;\r\n\t}\r\n\r\n\tpublic land(y: number) {\r\n\t\tif (this.rotation < 0) return;\r\n\t\tthis.isInAir = false;\r\n\t\tthis.isJumping = false;\r\n\t\tthis.rotationSpeed = 0;\r\n\t\tthis.rotation = 0;\r\n\t\tthis.yVelocity = 0;\r\n\t\tthis.y = y - this.h;\r\n\t\tif (!this.loadingJump) this.jumpVelStart = this.jumpVelStartReset;\r\n\t}\r\n\r\n\tpublic jump() {\r\n\t\tthis.loadingJump = false;\r\n\t\tif (this.isJumping || this.isInAir || this.yVelocity < 0) return;\r\n\t\tthis.rotationSpeed = this.jumpVelStart;\r\n\t\tthis.isJumping = true;\r\n\r\n\t\tthis.isInAir = true;\r\n\t\tthis.yVelocity = this.jumpVelStart;\r\n\t\tthis.jumpVelStart = this.jumpVelStartReset;\r\n\t}\r\n\r\n\tprivate loadJump() {\r\n\t\tif (this.jumpVelStart < this.maxJumpStart) {\r\n\t\t\tthis.jumpVelStart += 0.5;\r\n\t\t\tthis.hud.drawJumpCharge(\r\n\t\t\t\t1 - (this.maxJumpStart - this.jumpVelStart) / (this.maxJumpStart - this.jumpVelStartReset),\r\n\t\t\t\tthis.x,\r\n\t\t\t\tthis.y\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.hud.drawJumpCharge(1, this.x, this.y);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate drawFrame() {\r\n\t\tlet frameImg: HTMLImageElement;\r\n\t\tif (!this.isDucking) {\r\n\t\t\tframeImg = this.isBeingDamaged ? this.images.frameDamaged : this.images.frame;\r\n\t\t} else frameImg = this.isBeingDamaged ? this.images.frameDuckedDamaged : this.images.frameDucked;\r\n\r\n\t\tthis.ctx.save();\r\n\t\tthis.ctx.translate(this.rotCoordsForJump.x, this.rotCoordsForJump.y);\r\n\t\tthis.ctx.rotate((this.rotation * Math.PI) / 180);\r\n\t\tthis.ctx.drawImage(\r\n\t\t\tframeImg,\r\n\t\t\t-this.images.wheel.width / 2,\r\n\t\t\t-this.h + this.images.wheel.height / 2,\r\n\t\t\tthis.w,\r\n\t\t\tthis.h\r\n\t\t);\r\n\t\tthis.ctx.restore();\r\n\t}\r\n\r\n\tprivate drawWheels() {\r\n\t\tconst rotOffset = this.hud.health >= 90 ? 0 : this.hud.health < 90 && this.hud.health >= 50 ? 1 : 2;\r\n\r\n\t\tthis.ctx.save();\r\n\t\tthis.ctx.translate(this.rotCoordsForJump.x + rotOffset, this.rotCoordsForJump.y);\r\n\t\tthis.ctx.rotate((this.rotation * Math.PI) / 180); // Rotate for jump\r\n\t\tthis.ctx.rotate((this.wheelRot * Math.PI) / 180); // Rotate for wheel spin\r\n\t\tthis.ctx.drawImage(\r\n\t\t\tthis.isBeingDamaged ? this.images.wheelDamaged : this.images.wheel,\r\n\t\t\t-this.images.wheel.width / 2 - rotOffset,\r\n\t\t\t-this.images.wheel.height / 2,\r\n\t\t\tthis.images.wheel.width - 0.5,\r\n\t\t\tthis.images.wheel.height - 0.5\r\n\t\t);\r\n\t\tthis.ctx.restore();\r\n\r\n\t\tthis.ctx.save();\r\n\t\tthis.ctx.translate(this.rotCoordsForJump.x, this.rotCoordsForJump.y + rotOffset);\r\n\t\tthis.ctx.rotate((this.rotation * Math.PI) / 180); // Rotate for jump\r\n\t\tthis.ctx.translate(-this.rotCoordsForJump.x, -this.rotCoordsForJump.y); // Move to start\r\n\t\tthis.ctx.translate(this.x + this.w - this.images.wheel.width / 2, this.rotCoordsForJump.y);\r\n\t\tthis.ctx.rotate((this.wheelRot * Math.PI) / 180); // Rotate for wheel spin\r\n\t\tthis.ctx.translate(-(this.x + this.w - this.images.wheel.width / 2), -this.rotCoordsForJump.y); // Move to start\r\n\t\tthis.ctx.translate(this.rotCoordsForJump.x, this.rotCoordsForJump.y);\r\n\r\n\t\tthis.ctx.drawImage(\r\n\t\t\tthis.isBeingDamaged ? this.images.wheelDamaged : this.images.wheel,\r\n\t\t\t-(this.rotCoordsForJump.x - this.x) + this.w - this.images.wheel.width,\r\n\t\t\t-this.images.wheel.height / 2 - rotOffset,\r\n\t\t\tthis.images.wheel.width - 0.5,\r\n\t\t\tthis.images.wheel.height - 0.5\r\n\t\t);\r\n\t\tthis.ctx.restore();\r\n\t}\r\n\r\n\tprivate drawShield() {\r\n\t\tconst rOffset = 20;\r\n\t\tthis.ctx.fillStyle = 'rgba(220, 220, 255, 0.4)';\r\n\t\tthis.ctx.strokeStyle = 'rgba(220, 220, 255, 0.8)';\r\n\t\tthis.ctx.lineWidth = 2;\r\n\t\tthis.ctx.beginPath();\r\n\t\tthis.ctx.ellipse(\r\n\t\t\tthis.x + this.w / 2,\r\n\t\t\tthis.y + this.h / 2,\r\n\t\t\tthis.w / 2 + rOffset,\r\n\t\t\tthis.w / 2 + rOffset,\r\n\t\t\t2 * Math.PI,\r\n\t\t\t0,\r\n\t\t\t2 * Math.PI\r\n\t\t);\r\n\t\tthis.ctx.fill();\r\n\t\tthis.ctx.stroke();\r\n\t}\r\n\r\n\tpublic draw() {\r\n\t\tif (!this.images?.frame) return;\r\n\t\tthis.wheelRot += this.speed;\r\n\t\t// this.wheelRot += 10;\r\n\r\n\t\tif (this.loadingJump) this.loadJump();\r\n\r\n\t\tthis.y -= this.yVelocity;\r\n\t\tif (this.isInAir) this.yVelocity -= this.yAcc;\r\n\r\n\t\tif (this.isJumping) {\r\n\t\t\tthis.rotation -= this.rotationSpeed / 4;\r\n\t\t\tthis.rotationSpeed -= this.yAcc * 2;\r\n\r\n\t\t\tif (this.rotation >= 5) {\r\n\t\t\t\tthis.rotationSpeed = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// this.ctx.fillStyle = 'rgb(0, 0, 0, 0.5)';\r\n\t\t// this.ctx.beginPath();\r\n\t\t// this.ctx.rect(this.x, this.y, this.w, this.h);\r\n\t\t// this.ctx.fill();\r\n\r\n\t\tif (this.shieldActivated) this.drawShield();\r\n\r\n\t\tthis.rotCoordsForJump = {\r\n\t\t\tx: this.x + this.images.wheel.width / 2,\r\n\t\t\ty: this.y + this.h - this.images.wheel.height / 2,\r\n\t\t};\r\n\r\n\t\tthis.drawWheels();\r\n\t\tthis.drawFrame();\r\n\t}\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(961);\n__webpack_require__(32);\n__webpack_require__(853);\n__webpack_require__(94);\n__webpack_require__(627);\n__webpack_require__(251);\nvar __webpack_exports__ = __webpack_require__(699);\n"],"names":["ctx","world","hud","collisions","player","this","imagePaths","images","collectedPowerUps","currentPowerUp","name","durationInSecs","setUp","preloadImages","promises","map","path","Promise","resolve","reject","split","pop","image","Image","src","onload","onerror","all","imgArraytemp","Object","fromEntries","finishPowerUp","ignoreObjectCollision","shieldActivated","powerUpPercentUsed","usingPowerUp","usePowerUp","grabPowerUp","powerUp","increaseHealth","draw","powerUps","platYTop","platX","platLen","platIndex","i","length","imgSrc","imgX","xPercAlongPlat","imgY","height","distAbovePlat","object","includes","width","shift","drawImage","powerUpCollision","x1","x","y1","y","x2","y2","w1","w","h1","h","w2","h2","margin","push","checkForPlatCollision","playerRightOfPlatLeft","playerLeftOfPlatRight","playerAbovePlatBot","playerBelowPlatTop","isInAir","yVelocity","Math","abs","land","console","log","health","checkForCollision","marginLeft","marginRight","marginBot","reduceHealth","changeToDamagedImgs","framerate","lastObjectHit","drawingLevelText","levelTextOpacity","levelTextOpacityInc","currentLevel","fps","fpsEnabled","drawPowerUp","rInner","max","rOuter","xOffset","fillStyle","beginPath","ellipse","PI","fill","strokeStyle","lineWidth","circleSeparation","stroke","drawFps","font","textAlign","fillText","drawJumpCharge","percentCharged","roundRect","amt","drawHealth","sectionStartX","sectionStartY","sectionW","sectionH","drawNextLevelText","textBaseline","beginLevelTextAnimation","setTimeout","levels","platforms","len","gapToNext","decor","xLocsOnPlatByPerc","obsticles","platformTexture","platformH","backgroundImg","bgImgYOffset","maxPlatLen","speed","requestId","now","then","elapsed","fpsInterval","document","getElementById","getContext","alpha","startBtn","querySelector","paused","gameLoop","requestAnimationFrame","Date","clearRect","move","gameCompleted","cancelAnimationFrame","prepGame","style","display","innerHTML","freeze","addEventListener","e","code","loadingJump","duck","jump","stand","onclick","abilities","gameObject","platsVisible","index","level","backgroundX","backgroundX2","bgImgYOffset2","gameOver","collisionMargin","bgImg1","bgImg2","nextPlatform","lastVisiblePlat","platsRef","lastPlatRef","platRef","drawDecorForPlat","decorXVals","j","drawObsticleOnPlat","obsticleXVals","drawBgImage","bgImage1","bgImage2","isFalling","imgW","platform","aspectRatio","maxJumpStart","jumpVelStartReset","jumpVelStart","yAcc","rotation","rotationSpeed","isJumping","wheelRot","rotCoordsForJump","isBeingDamaged","isDucking","frame","frameDucked","loadJump","drawFrame","frameImg","frameDuckedDamaged","frameDamaged","save","translate","rotate","wheel","restore","drawWheels","rotOffset","wheelDamaged","drawShield","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}